{"/home/travis/build/npmtest/node-npmtest-cordova.plugins.diagnostic/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-cordova.plugins.diagnostic/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_cordova_plugins_diagnostic */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - init-after","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - init-after","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-cordova.plugins.diagnostic/lib.npmtest_cordova.plugins.diagnostic.js":{"path":"/home/travis/build/npmtest/node-npmtest-cordova.plugins.diagnostic/lib.npmtest_cordova.plugins.diagnostic.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":71}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":77}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_cordova_plugins_diagnostic */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_cordova_plugins_diagnostic = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_cordova_plugins_diagnostic = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-cordova.plugins.diagnostic/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-cordova.plugins.diagnostic/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":70}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":84},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-cordova.plugins.diagnostic && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_cordova_plugins_diagnostic */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_cordova_plugins_diagnostic","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // init-after","    // run browser js-env code - init-after","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_cordova_plugins_diagnostic.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_cordova_plugins_diagnostic.rollup.js'] =","            local.assetsDict['/assets.npmtest_cordova_plugins_diagnostic.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_cordova_plugins_diagnostic.__dirname + '/lib.npmtest_cordova_plugins_diagnostic.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-cordova.plugins.diagnostic/node_modules/cordova.plugins.diagnostic/src/windows/diagnosticProxy.js":{"path":"/home/travis/build/npmtest/node-npmtest-cordova.plugins.diagnostic/node_modules/cordova.plugins.diagnostic/src/windows/diagnosticProxy.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":25},"end":{"line":17,"column":67}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":12},"end":{"line":20,"column":36}}},"3":{"name":"(anonymous_3)","line":39,"loc":{"start":{"line":39,"column":12},"end":{"line":39,"column":29}}},"4":{"name":"(anonymous_4)","line":55,"loc":{"start":{"line":55,"column":20},"end":{"line":55,"column":76}}},"5":{"name":"(anonymous_5)","line":58,"loc":{"start":{"line":58,"column":12},"end":{"line":58,"column":33}}},"6":{"name":"(anonymous_6)","line":70,"loc":{"start":{"line":70,"column":12},"end":{"line":70,"column":29}}},"7":{"name":"(anonymous_7)","line":85,"loc":{"start":{"line":85,"column":23},"end":{"line":85,"column":65}}},"8":{"name":"(anonymous_8)","line":88,"loc":{"start":{"line":88,"column":12},"end":{"line":88,"column":34}}},"9":{"name":"(anonymous_9)","line":98,"loc":{"start":{"line":98,"column":12},"end":{"line":98,"column":29}}},"10":{"name":"(anonymous_10)","line":108,"loc":{"start":{"line":108,"column":30},"end":{"line":108,"column":42}}},"11":{"name":"(anonymous_11)","line":118,"loc":{"start":{"line":118,"column":32},"end":{"line":118,"column":44}}},"12":{"name":"(anonymous_12)","line":128,"loc":{"start":{"line":128,"column":26},"end":{"line":128,"column":38}}},"13":{"name":"(anonymous_13)","line":138,"loc":{"start":{"line":138,"column":31},"end":{"line":138,"column":43}}},"14":{"name":"(anonymous_14)","line":159,"loc":{"start":{"line":159,"column":19},"end":{"line":159,"column":67}}},"15":{"name":"checkRadioAccessError","line":166,"loc":{"start":{"line":166,"column":8},"end":{"line":166,"column":53}}},"16":{"name":"(anonymous_16)","line":189,"loc":{"start":{"line":189,"column":12},"end":{"line":189,"column":33}}},"17":{"name":"(anonymous_17)","line":204,"loc":{"start":{"line":204,"column":20},"end":{"line":204,"column":44}}},"18":{"name":"(anonymous_18)","line":214,"loc":{"start":{"line":214,"column":28},"end":{"line":214,"column":52}}},"19":{"name":"(anonymous_19)","line":221,"loc":{"start":{"line":221,"column":28},"end":{"line":221,"column":45}}},"20":{"name":"(anonymous_20)","line":226,"loc":{"start":{"line":226,"column":20},"end":{"line":226,"column":37}}},"21":{"name":"(anonymous_21)","line":231,"loc":{"start":{"line":231,"column":12},"end":{"line":231,"column":29}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":236,"column":3}},"2":{"start":{"line":19,"column":8},"end":{"line":42,"column":10}},"3":{"start":{"line":21,"column":16},"end":{"line":21,"column":38}},"4":{"start":{"line":22,"column":16},"end":{"line":22,"column":36}},"5":{"start":{"line":23,"column":16},"end":{"line":33,"column":17}},"6":{"start":{"line":25,"column":24},"end":{"line":25,"column":41}},"7":{"start":{"line":26,"column":24},"end":{"line":26,"column":30}},"8":{"start":{"line":28,"column":24},"end":{"line":28,"column":42}},"9":{"start":{"line":29,"column":24},"end":{"line":29,"column":30}},"10":{"start":{"line":31,"column":24},"end":{"line":31,"column":39}},"11":{"start":{"line":32,"column":24},"end":{"line":32,"column":30}},"12":{"start":{"line":34,"column":16},"end":{"line":37,"column":55}},"13":{"start":{"line":35,"column":20},"end":{"line":35,"column":47}},"14":{"start":{"line":37,"column":20},"end":{"line":37,"column":55}},"15":{"start":{"line":40,"column":16},"end":{"line":40,"column":37}},"16":{"start":{"line":57,"column":8},"end":{"line":73,"column":10}},"17":{"start":{"line":59,"column":16},"end":{"line":59,"column":147}},"18":{"start":{"line":60,"column":16},"end":{"line":60,"column":38}},"19":{"start":{"line":61,"column":16},"end":{"line":67,"column":17}},"20":{"start":{"line":62,"column":20},"end":{"line":66,"column":21}},"21":{"start":{"line":64,"column":24},"end":{"line":64,"column":41}},"22":{"start":{"line":65,"column":24},"end":{"line":65,"column":30}},"23":{"start":{"line":68,"column":16},"end":{"line":68,"column":43}},"24":{"start":{"line":71,"column":16},"end":{"line":71,"column":37}},"25":{"start":{"line":87,"column":8},"end":{"line":101,"column":10}},"26":{"start":{"line":89,"column":16},"end":{"line":89,"column":38}},"27":{"start":{"line":90,"column":16},"end":{"line":95,"column":17}},"28":{"start":{"line":91,"column":20},"end":{"line":94,"column":21}},"29":{"start":{"line":92,"column":24},"end":{"line":92,"column":41}},"30":{"start":{"line":93,"column":24},"end":{"line":93,"column":30}},"31":{"start":{"line":96,"column":16},"end":{"line":96,"column":43}},"32":{"start":{"line":99,"column":16},"end":{"line":99,"column":37}},"33":{"start":{"line":110,"column":8},"end":{"line":110,"column":77}},"34":{"start":{"line":111,"column":8},"end":{"line":111,"column":52}},"35":{"start":{"line":120,"column":8},"end":{"line":120,"column":70}},"36":{"start":{"line":121,"column":8},"end":{"line":121,"column":52}},"37":{"start":{"line":130,"column":8},"end":{"line":130,"column":66}},"38":{"start":{"line":131,"column":8},"end":{"line":131,"column":52}},"39":{"start":{"line":145,"column":8},"end":{"line":145,"column":70}},"40":{"start":{"line":146,"column":8},"end":{"line":146,"column":52}},"41":{"start":{"line":161,"column":8},"end":{"line":161,"column":33}},"42":{"start":{"line":162,"column":8},"end":{"line":162,"column":28}},"43":{"start":{"line":166,"column":8},"end":{"line":184,"column":9}},"44":{"start":{"line":167,"column":12},"end":{"line":167,"column":28}},"45":{"start":{"line":168,"column":12},"end":{"line":182,"column":13}},"46":{"start":{"line":170,"column":20},"end":{"line":170,"column":34}},"47":{"start":{"line":171,"column":20},"end":{"line":171,"column":26}},"48":{"start":{"line":173,"column":20},"end":{"line":173,"column":53}},"49":{"start":{"line":174,"column":20},"end":{"line":174,"column":26}},"50":{"start":{"line":176,"column":20},"end":{"line":176,"column":55}},"51":{"start":{"line":177,"column":20},"end":{"line":177,"column":26}},"52":{"start":{"line":180,"column":20},"end":{"line":180,"column":65}},"53":{"start":{"line":181,"column":20},"end":{"line":181,"column":26}},"54":{"start":{"line":183,"column":12},"end":{"line":183,"column":28}},"55":{"start":{"line":187,"column":8},"end":{"line":187,"column":137}},"56":{"start":{"line":188,"column":8},"end":{"line":234,"column":10}},"57":{"start":{"line":190,"column":16},"end":{"line":190,"column":33}},"58":{"start":{"line":191,"column":16},"end":{"line":196,"column":17}},"59":{"start":{"line":192,"column":20},"end":{"line":195,"column":21}},"60":{"start":{"line":193,"column":24},"end":{"line":193,"column":45}},"61":{"start":{"line":194,"column":24},"end":{"line":194,"column":30}},"62":{"start":{"line":197,"column":16},"end":{"line":200,"column":17}},"63":{"start":{"line":198,"column":20},"end":{"line":198,"column":54}},"64":{"start":{"line":199,"column":20},"end":{"line":199,"column":27}},"65":{"start":{"line":203,"column":16},"end":{"line":229,"column":18}},"66":{"start":{"line":205,"column":24},"end":{"line":205,"column":76}},"67":{"start":{"line":206,"column":24},"end":{"line":209,"column":25}},"68":{"start":{"line":207,"column":28},"end":{"line":207,"column":53}},"69":{"start":{"line":208,"column":28},"end":{"line":208,"column":35}},"70":{"start":{"line":212,"column":24},"end":{"line":212,"column":128}},"71":{"start":{"line":213,"column":24},"end":{"line":224,"column":26}},"72":{"start":{"line":215,"column":32},"end":{"line":215,"column":84}},"73":{"start":{"line":216,"column":32},"end":{"line":219,"column":61}},"74":{"start":{"line":217,"column":36},"end":{"line":217,"column":54}},"75":{"start":{"line":219,"column":36},"end":{"line":219,"column":61}},"76":{"start":{"line":222,"column":32},"end":{"line":222,"column":53}},"77":{"start":{"line":227,"column":24},"end":{"line":227,"column":45}},"78":{"start":{"line":232,"column":16},"end":{"line":232,"column":37}}},"branchMap":{"1":{"line":23,"type":"switch","locations":[{"start":{"line":24,"column":20},"end":{"line":26,"column":30}},{"start":{"line":27,"column":20},"end":{"line":29,"column":30}},{"start":{"line":30,"column":20},"end":{"line":32,"column":30}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":16},"end":{"line":34,"column":16}},{"start":{"line":34,"column":16},"end":{"line":34,"column":16}}]},"3":{"line":59,"type":"cond-expr","locations":[{"start":{"line":59,"column":64},"end":{"line":59,"column":106}},{"start":{"line":59,"column":109},"end":{"line":59,"column":146}}]},"4":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":20},"end":{"line":62,"column":20}},{"start":{"line":62,"column":20},"end":{"line":62,"column":20}}]},"5":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":25},"end":{"line":62,"column":55}},{"start":{"line":63,"column":28},"end":{"line":63,"column":86}}]},"6":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":20},"end":{"line":91,"column":20}},{"start":{"line":91,"column":20},"end":{"line":91,"column":20}}]},"7":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":25},"end":{"line":91,"column":64}},{"start":{"line":91,"column":70},"end":{"line":91,"column":150}}]},"8":{"line":168,"type":"switch","locations":[{"start":{"line":169,"column":16},"end":{"line":171,"column":26}},{"start":{"line":172,"column":16},"end":{"line":174,"column":26}},{"start":{"line":175,"column":16},"end":{"line":177,"column":26}},{"start":{"line":178,"column":16},"end":{"line":178,"column":74}},{"start":{"line":179,"column":16},"end":{"line":181,"column":26}}]},"9":{"line":187,"type":"cond-expr","locations":[{"start":{"line":187,"column":54},"end":{"line":187,"column":96}},{"start":{"line":187,"column":99},"end":{"line":187,"column":136}}]},"10":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":20},"end":{"line":192,"column":20}},{"start":{"line":192,"column":20},"end":{"line":192,"column":20}}]},"11":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":16},"end":{"line":197,"column":16}},{"start":{"line":197,"column":16},"end":{"line":197,"column":16}}]},"12":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":24},"end":{"line":206,"column":24}},{"start":{"line":206,"column":24},"end":{"line":206,"column":24}}]},"13":{"line":212,"type":"cond-expr","locations":[{"start":{"line":212,"column":51},"end":{"line":212,"column":87}},{"start":{"line":212,"column":90},"end":{"line":212,"column":127}}]},"14":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":32},"end":{"line":216,"column":32}},{"start":{"line":216,"column":32},"end":{"line":216,"column":32}}]}},"code":["/**"," *  Diagnostic plugin for Windows 10 Universal"," *"," *  Copyright (c) 2015 Next Wave Software, Inc.","**/","cordova.commandProxy.add(\"Diagnostic\", {","","    /**","     * Checks if location is enabled.","     *","     * @param {Function} successCallback - The callback which will be called when diagnostic is successful. ","     * This callback function is passed a single boolean parameter with the diagnostic result.","     * @param {Function} errorCallback -  The callback which will be called when diagnostic encounters an error.","     *  This callback function is passed a single string parameter containing the error message.","     */","    // exec(win, fail, 'Diagnostic', 'isLocationAvailable', []);","    isLocationAvailable: function (successCallback, errorCallback) {","","        Windows.Devices.Geolocation.Geolocator.requestAccessAsync().done(","            function (accessStatus) {","                var isEnabled = false;","                var isError = false;","                switch (accessStatus) {","                    case Windows.Devices.Geolocation.GeolocationAccessStatus.allowed:","                        isEnabled = true;","                        break;","                    case Windows.Devices.Geolocation.GeolocationAccessStatus.denied:","                        isEnabled = false;","                        break;","                    case Windows.Devices.Geolocation.GeolocationAccessStatus.unspecified:","                        isError = true;","                        break;","                }","                if (!isError)","                    successCallback(isEnabled);","                else","                    errorCallback(\"Unspecified error\");","            },","            function (error) {","                errorCallback(error);","            }","        );","    },","","    /**","     * Checks if bluetooth/wifi is enabled.","     *","     * @param {Function} successCallback - The callback which will be called when diagnostic is successful. ","     * This callback function is passed a single boolean parameter with the diagnostic result.","     * @param {Function} errorCallback -  The callback which will be called when diagnostic encounters an error.","     *  This callback function is passed a single string parameter containing the error message.","     * @param {String} radioToCheck - \"bluetooth\" or \"wifi\".","     */","    // exec(win, fail, 'Diagnostic', 'isRadioEnabled', [bluetooth/wifi]);","    isRadioEnabled: function (successCallback, errorCallback, radioToCheck) {","","        Windows.Devices.Radios.Radio.getRadiosAsync().done(","            function (radioList) {","                var radioKind = (radioToCheck == \"bluetooth\") ? Windows.Devices.Radios.RadioKind.bluetooth : Windows.Devices.Radios.RadioKind.wiFi;","                var isEnabled = false;","                for (var i = 0; i < radioList.length; i++) {","                    if ((radioList[i].kind == radioKind)","                        && (radioList[i].state == Windows.Devices.Radios.RadioState.on)) {","                        isEnabled = true;","                        break;","                    }","                }","                successCallback(isEnabled);","            },","            function (error) {","                errorCallback(error);","            }","        );","    },","","    /**","     * Checks if camera is enabled.","     *","     * @param {Function} successCallback - The callback which will be called when diagnostic is successful. ","     * This callback function is passed a single boolean parameter with the diagnostic result.","     * @param {Function} errorCallback -  The callback which will be called when diagnostic encounters an error.","     *  This callback function is passed a single string parameter containing the error message.","     */","    // exec(win, fail, 'Diagnostic', 'isCameraAvailable', []);","    isCameraAvailable: function (successCallback, errorCallback) {","","        Windows.Devices.Enumeration.DeviceInformation.findAllAsync(Windows.Devices.Enumeration.DeviceClass.videoCapture).then(","            function (deviceList) {","                var isEnabled = false;","                for (var i = 0; i < deviceList.length; i++) {","                    if ((deviceList[i].enclosureLocation != null) && (deviceList[i].enclosureLocation.panel === Windows.Devices.Enumeration.Panel.back)) {","                        isEnabled = true;","                        break;","                    }","                }","                successCallback(isEnabled);","            },","            function (error) {","                errorCallback(error);","            }","        );","    },","","    /**","     * Display the location services settings page.","     */","    // exec(null, null, 'Diagnostic', 'switchToLocationSettings', []);","    switchToLocationSettings: function () {","","        var uri = new Windows.Foundation.Uri(\"ms-settings:privacy-location\");","        Windows.System.Launcher.launchUriAsync(uri);","    },","","    /**","     * Display the mobile data settings page.","     */","    // exec(null, null, 'Diagnostic', 'switchToMobileDataSettings', []);","    switchToMobileDataSettings: function () {","","        var uri = new Windows.Foundation.Uri(\"ms-settings:datausage\");","        Windows.System.Launcher.launchUriAsync(uri);","    },","","    /**","     * Display the wifi settings page.","     */","    // exec(null, null, 'Diagnostic', 'switchToWifiSettings', []);","    switchToWifiSettings: function () {","","        var uri = new Windows.Foundation.Uri(\"ms-settings-wifi:\");","        Windows.System.Launcher.launchUriAsync(uri);","    },","","    /**","     * Display the bluetooth settings page.","     */","    // exec(null, null, 'Diagnostic', 'switchToBluetoothSettings', []);","    switchToBluetoothSettings: function () {","","        // Mike says: According to the docs, \"ms-settings-bluetooth:\" is the correct URI to use","        // to take the user directly to the Bluetooth page in the mobile settings app, but as of 10/9/2015","        // it does not work (we just get back \"false\" in the success callback). So,","        // using the desktop settings URI until this gets fixed, which takes the user to the","        // \"which of these settings are you interested in?\" page.","        var uri = new Windows.Foundation.Uri(\"ms-settings:bluetooth\");","        Windows.System.Launcher.launchUriAsync(uri);","    },","","    /**","     * Enables/disables WiFi or Bluetooth on the device.","     *","     * @param {Function} successCallback - function to call on successful setting of radio state","     * @param {Function} errorCallback - function to call on failure to set radio state.","     * This callback function is passed a single string parameter containing the error message.","     * @param {String} radioToSet - \"bluetooth\" or \"wifi\".","     * @param {Boolean} state - WiFi state to set: TRUE for enabled, FALSE for disabled.","     */","    // exec(win, fil, 'Diagnostic', 'setRadioState', [bluetooth/wifi, true/false]);","    setRadioState: function (successCallback, errorCallback, args) {","","        var radioToSet = args[0];","        var state = args[1];","","        // Check the return code from Radio.requestAccessAsync() and Radio.setStateAsync() ","        // calls below, return \"Ok\" if successful, error message if not.","        function checkRadioAccessError(accessStatus) {","            var msgOut = \"\";","            switch (accessStatus) {","                case Windows.Devices.Radios.RadioAccessStatus.allowed:","                    msgOut = \"Ok\";","                    break;","                case Windows.Devices.Radios.RadioAccessStatus.deniedByUser:","                    msgOut = \"Access denied by user\";","                    break;","                case Windows.Devices.Radios.RadioAccessStatus.deniedBySystem:","                    msgOut = \"Access denied by system\";","                    break;","                case Windows.Devices.Radios.RadioAccessStatus.unspecified:","                default:","                    msgOut = \"Access denied, unspecified reason\";","                    break;","            }","            return (msgOut);","        }","","        // Get the requested radio","        var radioKind = (radioToSet == \"bluetooth\") ? Windows.Devices.Radios.RadioKind.bluetooth : Windows.Devices.Radios.RadioKind.wiFi;","        Windows.Devices.Radios.Radio.getRadiosAsync().done(","            function (radioList) {","                var radio = null;","                for (var i = 0; i < radioList.length; i++) {","                    if (radioList[i].kind == radioKind) {","                        radio = radioList[i];","                        break;","                    }","                }","                if (radio == null) {","                    errorCallback(\"Device not found\");","                    return;","                }","","                // Get access to the radio","                Windows.Devices.Radios.Radio.requestAccessAsync().done(","                    function (accessStatus) {","                        var resultMsg = checkRadioAccessError(accessStatus);","                        if (resultMsg != \"Ok\") {","                            errorCallback(resultMsg);","                            return;","                        }","","                        // Set the state of the radio","                        var radioState = (state) ? Windows.Devices.Radios.RadioState.on : Windows.Devices.Radios.RadioState.off;","                        radio.setStateAsync(radioState).done(","                            function (accessStatus) {","                                var resultMsg = checkRadioAccessError(accessStatus);","                                if (resultMsg == \"Ok\")","                                    successCallback();","                                else","                                    errorCallback(resultMsg);","                            },","                            function (error) {","                                errorCallback(error);","                            }","                        );","                    },","                    function (error) {","                        errorCallback(error);","                    }","                );","            },","            function (error) {","                errorCallback(error);","            }","        );","    }","});",""],"l":{"6":2,"19":0,"21":0,"22":0,"23":0,"25":0,"26":0,"28":0,"29":0,"31":0,"32":0,"34":0,"35":0,"37":0,"40":0,"57":0,"59":0,"60":0,"61":0,"62":0,"64":0,"65":0,"68":0,"71":0,"87":0,"89":0,"90":0,"91":0,"92":0,"93":0,"96":0,"99":0,"110":0,"111":0,"120":0,"121":0,"130":0,"131":0,"145":0,"146":0,"161":0,"162":0,"166":1,"167":0,"168":0,"170":0,"171":0,"173":0,"174":0,"176":0,"177":0,"180":0,"181":0,"183":0,"187":0,"188":0,"190":0,"191":0,"192":0,"193":0,"194":0,"197":0,"198":0,"199":0,"203":0,"205":0,"206":0,"207":0,"208":0,"212":0,"213":0,"215":0,"216":0,"217":0,"219":0,"222":0,"227":0,"232":0}},"/home/travis/build/npmtest/node-npmtest-cordova.plugins.diagnostic/node_modules/cordova.plugins.diagnostic/www/android/diagnostic.js":{"path":"/home/travis/build/npmtest/node-npmtest-cordova.plugins.diagnostic/node_modules/cordova.plugins.diagnostic/www/android/diagnostic.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":2,"12":2,"13":2,"14":2,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":1,"38":2,"39":2,"40":2,"41":2,"42":2,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":1,"50":2,"51":2,"52":18,"53":18,"54":48,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":2,"84":0,"85":2,"86":0,"87":0,"88":1,"89":0,"90":0,"91":2,"92":0,"93":0,"94":1,"95":0,"96":0,"97":0,"98":0,"99":2,"100":0,"101":0,"102":0,"103":0,"104":1,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":1,"113":0,"114":0,"115":0,"116":0,"117":2,"118":0,"119":0,"120":0,"121":0,"122":1,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":1,"130":0,"131":0,"132":0,"133":0,"134":2,"135":0,"136":2,"137":0,"138":2,"139":0,"140":2,"141":0,"142":2,"143":0,"144":2,"145":0,"146":2,"147":0,"148":2,"149":0,"150":2,"151":0,"152":2,"153":0,"154":2,"155":1,"156":0,"157":0,"158":2,"159":1,"160":0,"161":0,"162":2,"163":1,"164":0,"165":0,"166":2,"167":0,"168":2,"169":0,"170":2,"171":0,"172":2,"173":0,"174":2,"175":0,"176":2,"177":0,"178":2,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":2,"189":0,"190":2,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":2,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":2,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":2,"224":0,"225":2,"226":0,"227":2,"228":1,"229":0,"230":0,"231":2,"232":0,"233":2,"234":0,"235":2,"236":0,"237":2,"238":0,"239":2,"240":0,"241":2,"242":0,"243":0,"244":2,"245":0,"246":2,"247":0,"248":2,"249":0,"250":2,"251":0,"252":2,"253":0,"254":2,"255":0,"256":2,"257":1,"258":0,"259":0,"260":2,"261":0,"262":2,"263":0,"264":2,"265":1,"266":0,"267":0,"268":2,"269":0,"270":2,"271":0,"272":2,"273":1,"274":0,"275":0,"276":2,"277":0,"278":2,"279":0,"280":2,"281":0,"282":2,"283":0,"284":2,"285":0,"286":2,"287":0,"288":2,"289":0,"290":2},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[2,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":2,"10":0,"11":2,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":28}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":58},"end":{"line":33,"column":68}}},"3":{"name":"checkForInvalidPermissions","line":130,"loc":{"start":{"line":130,"column":4},"end":{"line":130,"column":67}}},"4":{"name":"(anonymous_4)","line":133,"loc":{"start":{"line":133,"column":28},"end":{"line":133,"column":48}}},"5":{"name":"updateFirstRequestedPermissions","line":151,"loc":{"start":{"line":151,"column":4},"end":{"line":151,"column":57}}},"6":{"name":"(anonymous_6)","line":154,"loc":{"start":{"line":154,"column":28},"end":{"line":154,"column":48}}},"7":{"name":"(anonymous_7)","line":160,"loc":{"start":{"line":160,"column":55},"end":{"line":160,"column":75}}},"8":{"name":"setPermissionFirstRequested","line":168,"loc":{"start":{"line":168,"column":4},"end":{"line":168,"column":52}}},"9":{"name":"getFirstRequestedPermissions","line":173,"loc":{"start":{"line":173,"column":4},"end":{"line":173,"column":43}}},"10":{"name":"resolveStatus","line":186,"loc":{"start":{"line":186,"column":4},"end":{"line":186,"column":46}}},"11":{"name":"buildRuntimeGroupsMap","line":193,"loc":{"start":{"line":193,"column":4},"end":{"line":193,"column":36}}},"12":{"name":"combineLocationStatuses","line":203,"loc":{"start":{"line":203,"column":4},"end":{"line":203,"column":46}}},"13":{"name":"combineCameraStatuses","line":220,"loc":{"start":{"line":220,"column":4},"end":{"line":220,"column":44}}},"14":{"name":"ensureBoolean","line":237,"loc":{"start":{"line":237,"column":4},"end":{"line":237,"column":36}}},"15":{"name":"(anonymous_15)","line":238,"loc":{"start":{"line":238,"column":15},"end":{"line":238,"column":31}}},"16":{"name":"numberOfKeys","line":243,"loc":{"start":{"line":243,"column":4},"end":{"line":243,"column":30}}},"17":{"name":"(anonymous_17)","line":270,"loc":{"start":{"line":270,"column":34},"end":{"line":270,"column":75}}},"18":{"name":"(anonymous_18)","line":288,"loc":{"start":{"line":288,"column":50},"end":{"line":288,"column":102}}},"19":{"name":"onSuccess","line":291,"loc":{"start":{"line":291,"column":8},"end":{"line":291,"column":34}}},"20":{"name":"(anonymous_20)","line":313,"loc":{"start":{"line":313,"column":51},"end":{"line":313,"column":104}}},"21":{"name":"onSuccess","line":316,"loc":{"start":{"line":316,"column":8},"end":{"line":316,"column":36}}},"22":{"name":"(anonymous_22)","line":342,"loc":{"start":{"line":342,"column":42},"end":{"line":342,"column":95}}},"23":{"name":"onSuccess","line":349,"loc":{"start":{"line":349,"column":8},"end":{"line":349,"column":34}}},"24":{"name":"onError","line":359,"loc":{"start":{"line":359,"column":8},"end":{"line":359,"column":31}}},"25":{"name":"(anonymous_25)","line":383,"loc":{"start":{"line":383,"column":43},"end":{"line":383,"column":96}}},"26":{"name":"onSuccess","line":390,"loc":{"start":{"line":390,"column":8},"end":{"line":390,"column":36}}},"27":{"name":"onError","line":400,"loc":{"start":{"line":400,"column":8},"end":{"line":400,"column":31}}},"28":{"name":"(anonymous_28)","line":423,"loc":{"start":{"line":423,"column":40},"end":{"line":423,"column":50}}},"29":{"name":"(anonymous_29)","line":434,"loc":{"start":{"line":434,"column":58},"end":{"line":434,"column":84}}},"30":{"name":"(anonymous_30)","line":435,"loc":{"start":{"line":435,"column":69},"end":{"line":435,"column":79}}},"31":{"name":"(anonymous_31)","line":453,"loc":{"start":{"line":453,"column":37},"end":{"line":453,"column":78}}},"32":{"name":"(anonymous_32)","line":470,"loc":{"start":{"line":470,"column":35},"end":{"line":470,"column":76}}},"33":{"name":"(anonymous_33)","line":488,"loc":{"start":{"line":488,"column":40},"end":{"line":488,"column":81}}},"34":{"name":"(anonymous_34)","line":507,"loc":{"start":{"line":507,"column":38},"end":{"line":507,"column":79}}},"35":{"name":"(anonymous_35)","line":525,"loc":{"start":{"line":525,"column":44},"end":{"line":525,"column":85}}},"36":{"name":"(anonymous_36)","line":544,"loc":{"start":{"line":544,"column":42},"end":{"line":544,"column":83}}},"37":{"name":"(anonymous_37)","line":560,"loc":{"start":{"line":560,"column":33},"end":{"line":560,"column":74}}},"38":{"name":"(anonymous_38)","line":571,"loc":{"start":{"line":571,"column":42},"end":{"line":571,"column":53}}},"39":{"name":"(anonymous_39)","line":586,"loc":{"start":{"line":586,"column":46},"end":{"line":586,"column":86}}},"40":{"name":"onSuccess","line":587,"loc":{"start":{"line":587,"column":8},"end":{"line":587,"column":36}}},"41":{"name":"(anonymous_41)","line":603,"loc":{"start":{"line":603,"column":48},"end":{"line":603,"column":88}}},"42":{"name":"onSuccess","line":604,"loc":{"start":{"line":604,"column":8},"end":{"line":604,"column":36}}},"43":{"name":"(anonymous_43)","line":620,"loc":{"start":{"line":620,"column":38},"end":{"line":620,"column":78}}},"44":{"name":"onSuccess","line":621,"loc":{"start":{"line":621,"column":8},"end":{"line":621,"column":34}}},"45":{"name":"(anonymous_45)","line":635,"loc":{"start":{"line":635,"column":52},"end":{"line":635,"column":78}}},"46":{"name":"(anonymous_46)","line":636,"loc":{"start":{"line":636,"column":63},"end":{"line":636,"column":73}}},"47":{"name":"(anonymous_47)","line":652,"loc":{"start":{"line":652,"column":60},"end":{"line":652,"column":101}}},"48":{"name":"(anonymous_48)","line":663,"loc":{"start":{"line":663,"column":38},"end":{"line":663,"column":49}}},"49":{"name":"(anonymous_49)","line":675,"loc":{"start":{"line":675,"column":42},"end":{"line":675,"column":53}}},"50":{"name":"(anonymous_50)","line":686,"loc":{"start":{"line":686,"column":37},"end":{"line":686,"column":48}}},"51":{"name":"(anonymous_51)","line":702,"loc":{"start":{"line":702,"column":30},"end":{"line":702,"column":78}}},"52":{"name":"(anonymous_52)","line":725,"loc":{"start":{"line":725,"column":35},"end":{"line":725,"column":52}}},"53":{"name":"(anonymous_53)","line":735,"loc":{"start":{"line":735,"column":59},"end":{"line":735,"column":69}}},"54":{"name":"(anonymous_54)","line":736,"loc":{"start":{"line":736,"column":35},"end":{"line":736,"column":54}}},"55":{"name":"(anonymous_55)","line":753,"loc":{"start":{"line":753,"column":33},"end":{"line":753,"column":74}}},"56":{"name":"(anonymous_56)","line":771,"loc":{"start":{"line":771,"column":44},"end":{"line":771,"column":60}}},"57":{"name":"(anonymous_57)","line":786,"loc":{"start":{"line":786,"column":59},"end":{"line":786,"column":69}}},"58":{"name":"(anonymous_58)","line":787,"loc":{"start":{"line":787,"column":24},"end":{"line":787,"column":42}}},"59":{"name":"(anonymous_59)","line":803,"loc":{"start":{"line":803,"column":46},"end":{"line":803,"column":62}}},"60":{"name":"(anonymous_60)","line":818,"loc":{"start":{"line":818,"column":59},"end":{"line":818,"column":69}}},"61":{"name":"(anonymous_61)","line":819,"loc":{"start":{"line":819,"column":24},"end":{"line":819,"column":42}}},"62":{"name":"(anonymous_62)","line":835,"loc":{"start":{"line":835,"column":36},"end":{"line":835,"column":52}}},"63":{"name":"(anonymous_63)","line":845,"loc":{"start":{"line":845,"column":59},"end":{"line":845,"column":69}}},"64":{"name":"(anonymous_64)","line":846,"loc":{"start":{"line":846,"column":24},"end":{"line":846,"column":40}}},"65":{"name":"(anonymous_65)","line":867,"loc":{"start":{"line":867,"column":53},"end":{"line":867,"column":93}}},"66":{"name":"(anonymous_66)","line":878,"loc":{"start":{"line":878,"column":55},"end":{"line":878,"column":95}}},"67":{"name":"(anonymous_67)","line":889,"loc":{"start":{"line":889,"column":45},"end":{"line":889,"column":85}}},"68":{"name":"onSuccess","line":890,"loc":{"start":{"line":890,"column":8},"end":{"line":890,"column":34}}},"69":{"name":"(anonymous_69)","line":908,"loc":{"start":{"line":908,"column":42},"end":{"line":908,"column":82}}},"70":{"name":"(anonymous_70)","line":930,"loc":{"start":{"line":930,"column":38},"end":{"line":930,"column":79}}},"71":{"name":"(anonymous_71)","line":946,"loc":{"start":{"line":946,"column":36},"end":{"line":946,"column":77}}},"72":{"name":"(anonymous_72)","line":962,"loc":{"start":{"line":962,"column":35},"end":{"line":962,"column":83}}},"73":{"name":"(anonymous_73)","line":978,"loc":{"start":{"line":978,"column":35},"end":{"line":978,"column":76}}},"74":{"name":"(anonymous_74)","line":995,"loc":{"start":{"line":995,"column":53},"end":{"line":995,"column":94}}},"75":{"name":"(anonymous_75)","line":997,"loc":{"start":{"line":997,"column":12},"end":{"line":997,"column":22}}},"76":{"name":"(anonymous_76)","line":998,"loc":{"start":{"line":998,"column":72},"end":{"line":998,"column":82}}},"77":{"name":"(anonymous_77)","line":1017,"loc":{"start":{"line":1017,"column":37},"end":{"line":1017,"column":78}}},"78":{"name":"(anonymous_78)","line":1033,"loc":{"start":{"line":1033,"column":39},"end":{"line":1033,"column":80}}},"79":{"name":"(anonymous_79)","line":1049,"loc":{"start":{"line":1049,"column":39},"end":{"line":1049,"column":80}}},"80":{"name":"(anonymous_80)","line":1065,"loc":{"start":{"line":1065,"column":49},"end":{"line":1065,"column":90}}},"81":{"name":"(anonymous_81)","line":1075,"loc":{"start":{"line":1075,"column":43},"end":{"line":1075,"column":54}}},"82":{"name":"(anonymous_82)","line":1091,"loc":{"start":{"line":1091,"column":44},"end":{"line":1091,"column":55}}},"83":{"name":"(anonymous_83)","line":1112,"loc":{"start":{"line":1112,"column":40},"end":{"line":1112,"column":81}}},"84":{"name":"onSuccess","line":1113,"loc":{"start":{"line":1113,"column":8},"end":{"line":1113,"column":34}}},"85":{"name":"(anonymous_85)","line":1128,"loc":{"start":{"line":1128,"column":50},"end":{"line":1128,"column":91}}},"86":{"name":"(anonymous_86)","line":1139,"loc":{"start":{"line":1139,"column":48},"end":{"line":1139,"column":89}}},"87":{"name":"(anonymous_87)","line":1155,"loc":{"start":{"line":1155,"column":38},"end":{"line":1155,"column":79}}},"88":{"name":"onSuccess","line":1156,"loc":{"start":{"line":1156,"column":8},"end":{"line":1156,"column":34}}},"89":{"name":"(anonymous_89)","line":1171,"loc":{"start":{"line":1171,"column":48},"end":{"line":1171,"column":89}}},"90":{"name":"(anonymous_90)","line":1183,"loc":{"start":{"line":1183,"column":46},"end":{"line":1183,"column":87}}},"91":{"name":"(anonymous_91)","line":1199,"loc":{"start":{"line":1199,"column":38},"end":{"line":1199,"column":79}}},"92":{"name":"onSuccess","line":1200,"loc":{"start":{"line":1200,"column":8},"end":{"line":1200,"column":34}}},"93":{"name":"(anonymous_93)","line":1215,"loc":{"start":{"line":1215,"column":48},"end":{"line":1215,"column":89}}},"94":{"name":"(anonymous_94)","line":1227,"loc":{"start":{"line":1227,"column":46},"end":{"line":1227,"column":87}}},"95":{"name":"(anonymous_95)","line":1243,"loc":{"start":{"line":1243,"column":30},"end":{"line":1243,"column":71}}},"96":{"name":"(anonymous_96)","line":1259,"loc":{"start":{"line":1259,"column":30},"end":{"line":1259,"column":71}}},"97":{"name":"(anonymous_97)","line":1276,"loc":{"start":{"line":1276,"column":32},"end":{"line":1276,"column":73}}},"98":{"name":"(anonymous_98)","line":1291,"loc":{"start":{"line":1291,"column":47},"end":{"line":1291,"column":73}}},"99":{"name":"(anonymous_99)","line":1292,"loc":{"start":{"line":1292,"column":58},"end":{"line":1292,"column":68}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":1302,"column":3}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":24}},"3":{"start":{"line":16,"column":4},"end":{"line":16,"column":45}},"4":{"start":{"line":18,"column":4},"end":{"line":18,"column":25}},"5":{"start":{"line":21,"column":4},"end":{"line":21,"column":34}},"6":{"start":{"line":30,"column":4},"end":{"line":33,"column":71}},"7":{"start":{"line":41,"column":4},"end":{"line":67,"column":10}},"8":{"start":{"line":74,"column":4},"end":{"line":85,"column":10}},"9":{"start":{"line":87,"column":4},"end":{"line":93,"column":10}},"10":{"start":{"line":95,"column":4},"end":{"line":100,"column":6}},"11":{"start":{"line":102,"column":4},"end":{"line":102,"column":46}},"12":{"start":{"line":105,"column":4},"end":{"line":105,"column":41}},"13":{"start":{"line":107,"column":4},"end":{"line":113,"column":6}},"14":{"start":{"line":115,"column":4},"end":{"line":121,"column":6}},"15":{"start":{"line":130,"column":4},"end":{"line":143,"column":5}},"16":{"start":{"line":131,"column":8},"end":{"line":131,"column":73}},"17":{"start":{"line":131,"column":45},"end":{"line":131,"column":73}},"18":{"start":{"line":132,"column":8},"end":{"line":132,"column":50}},"19":{"start":{"line":133,"column":8},"end":{"line":137,"column":11}},"20":{"start":{"line":134,"column":12},"end":{"line":136,"column":13}},"21":{"start":{"line":135,"column":16},"end":{"line":135,"column":52}},"22":{"start":{"line":138,"column":8},"end":{"line":141,"column":9}},"23":{"start":{"line":139,"column":12},"end":{"line":139,"column":91}},"24":{"start":{"line":140,"column":12},"end":{"line":140,"column":26}},"25":{"start":{"line":142,"column":8},"end":{"line":142,"column":21}},"26":{"start":{"line":151,"column":4},"end":{"line":166,"column":5}},"27":{"start":{"line":152,"column":8},"end":{"line":152,"column":24}},"28":{"start":{"line":154,"column":8},"end":{"line":156,"column":11}},"29":{"start":{"line":155,"column":12},"end":{"line":155,"column":53}},"30":{"start":{"line":159,"column":8},"end":{"line":165,"column":9}},"31":{"start":{"line":160,"column":12},"end":{"line":164,"column":15}},"32":{"start":{"line":161,"column":16},"end":{"line":163,"column":17}},"33":{"start":{"line":162,"column":20},"end":{"line":162,"column":60}},"34":{"start":{"line":168,"column":4},"end":{"line":171,"column":5}},"35":{"start":{"line":169,"column":8},"end":{"line":169,"column":65}},"36":{"start":{"line":170,"column":8},"end":{"line":170,"column":39}},"37":{"start":{"line":173,"column":4},"end":{"line":184,"column":5}},"38":{"start":{"line":174,"column":8},"end":{"line":176,"column":9}},"39":{"start":{"line":175,"column":12},"end":{"line":175,"column":36}},"40":{"start":{"line":177,"column":8},"end":{"line":177,"column":50}},"41":{"start":{"line":178,"column":8},"end":{"line":182,"column":9}},"42":{"start":{"line":179,"column":12},"end":{"line":181,"column":13}},"43":{"start":{"line":180,"column":16},"end":{"line":180,"column":69}},"44":{"start":{"line":183,"column":8},"end":{"line":183,"column":52}},"45":{"start":{"line":186,"column":4},"end":{"line":191,"column":5}},"46":{"start":{"line":187,"column":8},"end":{"line":189,"column":9}},"47":{"start":{"line":188,"column":12},"end":{"line":188,"column":158}},"48":{"start":{"line":190,"column":8},"end":{"line":190,"column":22}},"49":{"start":{"line":193,"column":4},"end":{"line":201,"column":5}},"50":{"start":{"line":194,"column":8},"end":{"line":194,"column":30}},"51":{"start":{"line":195,"column":8},"end":{"line":200,"column":9}},"52":{"start":{"line":196,"column":12},"end":{"line":196,"column":65}},"53":{"start":{"line":197,"column":12},"end":{"line":199,"column":13}},"54":{"start":{"line":198,"column":16},"end":{"line":198,"column":57}},"55":{"start":{"line":203,"column":4},"end":{"line":218,"column":5}},"56":{"start":{"line":204,"column":8},"end":{"line":206,"column":19}},"57":{"start":{"line":208,"column":8},"end":{"line":216,"column":9}},"58":{"start":{"line":209,"column":12},"end":{"line":209,"column":63}},"59":{"start":{"line":210,"column":14},"end":{"line":216,"column":9}},"60":{"start":{"line":211,"column":12},"end":{"line":211,"column":56}},"61":{"start":{"line":212,"column":14},"end":{"line":216,"column":9}},"62":{"start":{"line":213,"column":12},"end":{"line":213,"column":63}},"63":{"start":{"line":215,"column":12},"end":{"line":215,"column":57}},"64":{"start":{"line":217,"column":8},"end":{"line":217,"column":22}},"65":{"start":{"line":220,"column":4},"end":{"line":235,"column":5}},"66":{"start":{"line":221,"column":8},"end":{"line":223,"column":19}},"67":{"start":{"line":225,"column":8},"end":{"line":233,"column":9}},"68":{"start":{"line":226,"column":12},"end":{"line":226,"column":63}},"69":{"start":{"line":227,"column":14},"end":{"line":233,"column":9}},"70":{"start":{"line":228,"column":12},"end":{"line":228,"column":56}},"71":{"start":{"line":229,"column":14},"end":{"line":233,"column":9}},"72":{"start":{"line":230,"column":12},"end":{"line":230,"column":63}},"73":{"start":{"line":232,"column":12},"end":{"line":232,"column":57}},"74":{"start":{"line":234,"column":8},"end":{"line":234,"column":22}},"75":{"start":{"line":237,"column":4},"end":{"line":241,"column":5}},"76":{"start":{"line":238,"column":8},"end":{"line":240,"column":9}},"77":{"start":{"line":239,"column":12},"end":{"line":239,"column":31}},"78":{"start":{"line":243,"column":4},"end":{"line":249,"column":5}},"79":{"start":{"line":244,"column":8},"end":{"line":244,"column":22}},"80":{"start":{"line":245,"column":8},"end":{"line":247,"column":9}},"81":{"start":{"line":246,"column":12},"end":{"line":246,"column":20}},"82":{"start":{"line":248,"column":8},"end":{"line":248,"column":21}},"83":{"start":{"line":270,"column":4},"end":{"line":276,"column":6}},"84":{"start":{"line":271,"column":8},"end":{"line":275,"column":16}},"85":{"start":{"line":288,"column":4},"end":{"line":301,"column":6}},"86":{"start":{"line":289,"column":8},"end":{"line":289,"column":74}},"87":{"start":{"line":289,"column":67},"end":{"line":289,"column":74}},"88":{"start":{"line":291,"column":8},"end":{"line":293,"column":9}},"89":{"start":{"line":292,"column":12},"end":{"line":292,"column":63}},"90":{"start":{"line":295,"column":8},"end":{"line":300,"column":26}},"91":{"start":{"line":313,"column":4},"end":{"line":329,"column":6}},"92":{"start":{"line":314,"column":8},"end":{"line":314,"column":75}},"93":{"start":{"line":314,"column":68},"end":{"line":314,"column":75}},"94":{"start":{"line":316,"column":8},"end":{"line":321,"column":9}},"95":{"start":{"line":317,"column":12},"end":{"line":319,"column":13}},"96":{"start":{"line":318,"column":16},"end":{"line":318,"column":87}},"97":{"start":{"line":320,"column":12},"end":{"line":320,"column":38}},"98":{"start":{"line":323,"column":8},"end":{"line":328,"column":27}},"99":{"start":{"line":342,"column":4},"end":{"line":371,"column":6}},"100":{"start":{"line":343,"column":8},"end":{"line":343,"column":74}},"101":{"start":{"line":343,"column":67},"end":{"line":343,"column":74}},"102":{"start":{"line":345,"column":8},"end":{"line":347,"column":9}},"103":{"start":{"line":346,"column":12},"end":{"line":346,"column":83}},"104":{"start":{"line":349,"column":8},"end":{"line":357,"column":9}},"105":{"start":{"line":350,"column":12},"end":{"line":350,"column":38}},"106":{"start":{"line":351,"column":12},"end":{"line":351,"column":71}},"107":{"start":{"line":352,"column":12},"end":{"line":352,"column":36}},"108":{"start":{"line":353,"column":12},"end":{"line":353,"column":30}},"109":{"start":{"line":354,"column":12},"end":{"line":354,"column":42}},"110":{"start":{"line":355,"column":12},"end":{"line":355,"column":62}},"111":{"start":{"line":356,"column":12},"end":{"line":356,"column":58}},"112":{"start":{"line":359,"column":8},"end":{"line":362,"column":9}},"113":{"start":{"line":360,"column":12},"end":{"line":360,"column":38}},"114":{"start":{"line":361,"column":12},"end":{"line":361,"column":33}},"115":{"start":{"line":364,"column":8},"end":{"line":364,"column":33}},"116":{"start":{"line":365,"column":8},"end":{"line":370,"column":26}},"117":{"start":{"line":383,"column":4},"end":{"line":413,"column":6}},"118":{"start":{"line":384,"column":8},"end":{"line":384,"column":75}},"119":{"start":{"line":384,"column":68},"end":{"line":384,"column":75}},"120":{"start":{"line":386,"column":8},"end":{"line":388,"column":9}},"121":{"start":{"line":387,"column":12},"end":{"line":387,"column":83}},"122":{"start":{"line":390,"column":8},"end":{"line":398,"column":9}},"123":{"start":{"line":391,"column":12},"end":{"line":391,"column":38}},"124":{"start":{"line":392,"column":12},"end":{"line":394,"column":13}},"125":{"start":{"line":393,"column":16},"end":{"line":393,"column":87}},"126":{"start":{"line":395,"column":12},"end":{"line":395,"column":38}},"127":{"start":{"line":396,"column":12},"end":{"line":396,"column":62}},"128":{"start":{"line":397,"column":12},"end":{"line":397,"column":57}},"129":{"start":{"line":400,"column":8},"end":{"line":403,"column":9}},"130":{"start":{"line":401,"column":12},"end":{"line":401,"column":38}},"131":{"start":{"line":402,"column":12},"end":{"line":402,"column":33}},"132":{"start":{"line":405,"column":8},"end":{"line":405,"column":33}},"133":{"start":{"line":406,"column":8},"end":{"line":411,"column":27}},"134":{"start":{"line":423,"column":4},"end":{"line":425,"column":6}},"135":{"start":{"line":424,"column":8},"end":{"line":424,"column":33}},"136":{"start":{"line":434,"column":4},"end":{"line":436,"column":6}},"137":{"start":{"line":435,"column":8},"end":{"line":435,"column":82}},"138":{"start":{"line":453,"column":4},"end":{"line":459,"column":6}},"139":{"start":{"line":454,"column":8},"end":{"line":458,"column":16}},"140":{"start":{"line":470,"column":4},"end":{"line":476,"column":6}},"141":{"start":{"line":471,"column":8},"end":{"line":475,"column":16}},"142":{"start":{"line":488,"column":4},"end":{"line":494,"column":6}},"143":{"start":{"line":489,"column":8},"end":{"line":493,"column":16}},"144":{"start":{"line":507,"column":4},"end":{"line":513,"column":6}},"145":{"start":{"line":508,"column":8},"end":{"line":512,"column":16}},"146":{"start":{"line":525,"column":4},"end":{"line":531,"column":6}},"147":{"start":{"line":526,"column":8},"end":{"line":530,"column":16}},"148":{"start":{"line":544,"column":4},"end":{"line":550,"column":6}},"149":{"start":{"line":545,"column":8},"end":{"line":549,"column":16}},"150":{"start":{"line":560,"column":4},"end":{"line":566,"column":6}},"151":{"start":{"line":561,"column":8},"end":{"line":565,"column":16}},"152":{"start":{"line":571,"column":4},"end":{"line":577,"column":6}},"153":{"start":{"line":572,"column":8},"end":{"line":576,"column":16}},"154":{"start":{"line":586,"column":4},"end":{"line":594,"column":6}},"155":{"start":{"line":587,"column":8},"end":{"line":589,"column":9}},"156":{"start":{"line":588,"column":12},"end":{"line":588,"column":63}},"157":{"start":{"line":590,"column":8},"end":{"line":593,"column":11}},"158":{"start":{"line":603,"column":4},"end":{"line":611,"column":6}},"159":{"start":{"line":604,"column":8},"end":{"line":606,"column":9}},"160":{"start":{"line":605,"column":12},"end":{"line":605,"column":63}},"161":{"start":{"line":607,"column":8},"end":{"line":610,"column":11}},"162":{"start":{"line":620,"column":4},"end":{"line":625,"column":6}},"163":{"start":{"line":621,"column":8},"end":{"line":623,"column":9}},"164":{"start":{"line":622,"column":12},"end":{"line":622,"column":75}},"165":{"start":{"line":624,"column":8},"end":{"line":624,"column":76}},"166":{"start":{"line":635,"column":4},"end":{"line":637,"column":6}},"167":{"start":{"line":636,"column":8},"end":{"line":636,"column":76}},"168":{"start":{"line":652,"column":4},"end":{"line":658,"column":6}},"169":{"start":{"line":653,"column":8},"end":{"line":657,"column":16}},"170":{"start":{"line":663,"column":4},"end":{"line":669,"column":6}},"171":{"start":{"line":664,"column":8},"end":{"line":668,"column":16}},"172":{"start":{"line":675,"column":4},"end":{"line":681,"column":6}},"173":{"start":{"line":676,"column":8},"end":{"line":680,"column":16}},"174":{"start":{"line":686,"column":4},"end":{"line":692,"column":6}},"175":{"start":{"line":687,"column":8},"end":{"line":691,"column":16}},"176":{"start":{"line":702,"column":4},"end":{"line":708,"column":6}},"177":{"start":{"line":703,"column":8},"end":{"line":707,"column":21}},"178":{"start":{"line":725,"column":4},"end":{"line":743,"column":6}},"179":{"start":{"line":726,"column":8},"end":{"line":726,"column":30}},"180":{"start":{"line":727,"column":8},"end":{"line":733,"column":9}},"181":{"start":{"line":728,"column":12},"end":{"line":728,"column":239}},"182":{"start":{"line":729,"column":12},"end":{"line":732,"column":14}},"183":{"start":{"line":735,"column":8},"end":{"line":735,"column":72}},"184":{"start":{"line":736,"column":8},"end":{"line":742,"column":32}},"185":{"start":{"line":737,"column":12},"end":{"line":741,"column":13}},"186":{"start":{"line":738,"column":16},"end":{"line":738,"column":54}},"187":{"start":{"line":740,"column":16},"end":{"line":740,"column":52}},"188":{"start":{"line":753,"column":4},"end":{"line":759,"column":6}},"189":{"start":{"line":754,"column":8},"end":{"line":758,"column":16}},"190":{"start":{"line":771,"column":4},"end":{"line":791,"column":6}},"191":{"start":{"line":772,"column":8},"end":{"line":772,"column":30}},"192":{"start":{"line":773,"column":8},"end":{"line":779,"column":9}},"193":{"start":{"line":774,"column":12},"end":{"line":774,"column":257}},"194":{"start":{"line":775,"column":12},"end":{"line":778,"column":14}},"195":{"start":{"line":781,"column":8},"end":{"line":781,"column":57}},"196":{"start":{"line":782,"column":8},"end":{"line":784,"column":9}},"197":{"start":{"line":783,"column":12},"end":{"line":783,"column":74}},"198":{"start":{"line":786,"column":8},"end":{"line":786,"column":72}},"199":{"start":{"line":787,"column":8},"end":{"line":789,"column":10}},"200":{"start":{"line":788,"column":12},"end":{"line":788,"column":137}},"201":{"start":{"line":790,"column":8},"end":{"line":790,"column":91}},"202":{"start":{"line":803,"column":4},"end":{"line":823,"column":6}},"203":{"start":{"line":804,"column":8},"end":{"line":804,"column":30}},"204":{"start":{"line":805,"column":8},"end":{"line":811,"column":9}},"205":{"start":{"line":806,"column":12},"end":{"line":806,"column":261}},"206":{"start":{"line":807,"column":12},"end":{"line":810,"column":14}},"207":{"start":{"line":813,"column":8},"end":{"line":813,"column":57}},"208":{"start":{"line":814,"column":8},"end":{"line":816,"column":9}},"209":{"start":{"line":815,"column":12},"end":{"line":815,"column":74}},"210":{"start":{"line":818,"column":8},"end":{"line":818,"column":72}},"211":{"start":{"line":819,"column":8},"end":{"line":821,"column":10}},"212":{"start":{"line":820,"column":12},"end":{"line":820,"column":137}},"213":{"start":{"line":822,"column":8},"end":{"line":822,"column":99}},"214":{"start":{"line":835,"column":4},"end":{"line":855,"column":6}},"215":{"start":{"line":836,"column":8},"end":{"line":836,"column":30}},"216":{"start":{"line":837,"column":8},"end":{"line":843,"column":9}},"217":{"start":{"line":838,"column":12},"end":{"line":838,"column":241}},"218":{"start":{"line":839,"column":12},"end":{"line":842,"column":14}},"219":{"start":{"line":845,"column":8},"end":{"line":845,"column":72}},"220":{"start":{"line":846,"column":8},"end":{"line":848,"column":10}},"221":{"start":{"line":847,"column":12},"end":{"line":847,"column":82}},"222":{"start":{"line":850,"column":8},"end":{"line":854,"column":11}},"223":{"start":{"line":867,"column":4},"end":{"line":869,"column":6}},"224":{"start":{"line":868,"column":8},"end":{"line":868,"column":121}},"225":{"start":{"line":878,"column":4},"end":{"line":880,"column":6}},"226":{"start":{"line":879,"column":8},"end":{"line":879,"column":129}},"227":{"start":{"line":889,"column":4},"end":{"line":894,"column":6}},"228":{"start":{"line":890,"column":8},"end":{"line":892,"column":9}},"229":{"start":{"line":891,"column":12},"end":{"line":891,"column":75}},"230":{"start":{"line":893,"column":8},"end":{"line":893,"column":83}},"231":{"start":{"line":908,"column":4},"end":{"line":914,"column":6}},"232":{"start":{"line":909,"column":8},"end":{"line":913,"column":16}},"233":{"start":{"line":930,"column":4},"end":{"line":936,"column":6}},"234":{"start":{"line":931,"column":8},"end":{"line":935,"column":16}},"235":{"start":{"line":946,"column":4},"end":{"line":952,"column":6}},"236":{"start":{"line":947,"column":8},"end":{"line":951,"column":16}},"237":{"start":{"line":962,"column":4},"end":{"line":968,"column":6}},"238":{"start":{"line":963,"column":8},"end":{"line":967,"column":21}},"239":{"start":{"line":978,"column":4},"end":{"line":984,"column":6}},"240":{"start":{"line":979,"column":8},"end":{"line":983,"column":16}},"241":{"start":{"line":995,"column":4},"end":{"line":1005,"column":6}},"242":{"start":{"line":996,"column":8},"end":{"line":1004,"column":10}},"243":{"start":{"line":998,"column":16},"end":{"line":998,"column":85}},"244":{"start":{"line":1017,"column":4},"end":{"line":1022,"column":6}},"245":{"start":{"line":1018,"column":8},"end":{"line":1021,"column":39}},"246":{"start":{"line":1033,"column":4},"end":{"line":1038,"column":6}},"247":{"start":{"line":1034,"column":8},"end":{"line":1037,"column":41}},"248":{"start":{"line":1049,"column":4},"end":{"line":1054,"column":6}},"249":{"start":{"line":1050,"column":8},"end":{"line":1053,"column":41}},"250":{"start":{"line":1065,"column":4},"end":{"line":1070,"column":6}},"251":{"start":{"line":1066,"column":8},"end":{"line":1069,"column":51}},"252":{"start":{"line":1075,"column":4},"end":{"line":1081,"column":6}},"253":{"start":{"line":1076,"column":8},"end":{"line":1080,"column":16}},"254":{"start":{"line":1091,"column":4},"end":{"line":1097,"column":6}},"255":{"start":{"line":1092,"column":8},"end":{"line":1096,"column":16}},"256":{"start":{"line":1112,"column":4},"end":{"line":1117,"column":6}},"257":{"start":{"line":1113,"column":8},"end":{"line":1115,"column":9}},"258":{"start":{"line":1114,"column":12},"end":{"line":1114,"column":75}},"259":{"start":{"line":1116,"column":8},"end":{"line":1116,"column":78}},"260":{"start":{"line":1128,"column":4},"end":{"line":1130,"column":6}},"261":{"start":{"line":1129,"column":8},"end":{"line":1129,"column":120}},"262":{"start":{"line":1139,"column":4},"end":{"line":1141,"column":6}},"263":{"start":{"line":1140,"column":8},"end":{"line":1140,"column":112}},"264":{"start":{"line":1155,"column":4},"end":{"line":1160,"column":6}},"265":{"start":{"line":1156,"column":8},"end":{"line":1158,"column":9}},"266":{"start":{"line":1157,"column":12},"end":{"line":1157,"column":75}},"267":{"start":{"line":1159,"column":8},"end":{"line":1159,"column":76}},"268":{"start":{"line":1171,"column":4},"end":{"line":1173,"column":6}},"269":{"start":{"line":1172,"column":8},"end":{"line":1172,"column":121}},"270":{"start":{"line":1183,"column":4},"end":{"line":1185,"column":6}},"271":{"start":{"line":1184,"column":8},"end":{"line":1184,"column":113}},"272":{"start":{"line":1199,"column":4},"end":{"line":1204,"column":6}},"273":{"start":{"line":1200,"column":8},"end":{"line":1202,"column":9}},"274":{"start":{"line":1201,"column":12},"end":{"line":1201,"column":75}},"275":{"start":{"line":1203,"column":8},"end":{"line":1203,"column":76}},"276":{"start":{"line":1215,"column":4},"end":{"line":1217,"column":6}},"277":{"start":{"line":1216,"column":8},"end":{"line":1216,"column":121}},"278":{"start":{"line":1227,"column":4},"end":{"line":1229,"column":6}},"279":{"start":{"line":1228,"column":8},"end":{"line":1228,"column":113}},"280":{"start":{"line":1243,"column":4},"end":{"line":1249,"column":6}},"281":{"start":{"line":1244,"column":8},"end":{"line":1248,"column":16}},"282":{"start":{"line":1259,"column":4},"end":{"line":1265,"column":6}},"283":{"start":{"line":1260,"column":8},"end":{"line":1264,"column":16}},"284":{"start":{"line":1276,"column":4},"end":{"line":1282,"column":6}},"285":{"start":{"line":1277,"column":8},"end":{"line":1281,"column":16}},"286":{"start":{"line":1291,"column":4},"end":{"line":1293,"column":6}},"287":{"start":{"line":1292,"column":8},"end":{"line":1292,"column":71}},"288":{"start":{"line":1299,"column":4},"end":{"line":1299,"column":35}},"289":{"start":{"line":1301,"column":4},"end":{"line":1301,"column":22}},"290":{"start":{"line":1303,"column":0},"end":{"line":1303,"column":34}}},"branchMap":{"1":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":8},"end":{"line":131,"column":8}},{"start":{"line":131,"column":8},"end":{"line":131,"column":8}}]},"2":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":12},"end":{"line":134,"column":12}},{"start":{"line":134,"column":12},"end":{"line":134,"column":12}}]},"3":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":8},"end":{"line":138,"column":8}},{"start":{"line":138,"column":8},"end":{"line":138,"column":8}}]},"4":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":16},"end":{"line":161,"column":16}},{"start":{"line":161,"column":16},"end":{"line":161,"column":16}}]},"5":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":8},"end":{"line":174,"column":8}},{"start":{"line":174,"column":8},"end":{"line":174,"column":8}}]},"6":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":12},"end":{"line":179,"column":12}},{"start":{"line":179,"column":12},"end":{"line":179,"column":12}}]},"7":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":8},"end":{"line":187,"column":8}},{"start":{"line":187,"column":8},"end":{"line":187,"column":8}}]},"8":{"line":188,"type":"cond-expr","locations":[{"start":{"line":188,"column":72},"end":{"line":188,"column":113}},{"start":{"line":188,"column":116},"end":{"line":188,"column":157}}]},"9":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":8},"end":{"line":208,"column":8}},{"start":{"line":208,"column":8},"end":{"line":208,"column":8}}]},"10":{"line":208,"type":"binary-expr","locations":[{"start":{"line":208,"column":11},"end":{"line":208,"column":68}},{"start":{"line":208,"column":72},"end":{"line":208,"column":127}}]},"11":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":14},"end":{"line":210,"column":14}},{"start":{"line":210,"column":14},"end":{"line":210,"column":14}}]},"12":{"line":210,"type":"binary-expr","locations":[{"start":{"line":210,"column":17},"end":{"line":210,"column":67}},{"start":{"line":210,"column":71},"end":{"line":210,"column":119}}]},"13":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":14},"end":{"line":212,"column":14}},{"start":{"line":212,"column":14},"end":{"line":212,"column":14}}]},"14":{"line":212,"type":"binary-expr","locations":[{"start":{"line":212,"column":17},"end":{"line":212,"column":74}},{"start":{"line":212,"column":78},"end":{"line":212,"column":133}}]},"15":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":8},"end":{"line":225,"column":8}},{"start":{"line":225,"column":8},"end":{"line":225,"column":8}}]},"16":{"line":225,"type":"binary-expr","locations":[{"start":{"line":225,"column":11},"end":{"line":225,"column":68}},{"start":{"line":225,"column":72},"end":{"line":225,"column":128}}]},"17":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":14},"end":{"line":227,"column":14}},{"start":{"line":227,"column":14},"end":{"line":227,"column":14}}]},"18":{"line":227,"type":"binary-expr","locations":[{"start":{"line":227,"column":17},"end":{"line":227,"column":67}},{"start":{"line":227,"column":71},"end":{"line":227,"column":120}}]},"19":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":14},"end":{"line":229,"column":14}},{"start":{"line":229,"column":14},"end":{"line":229,"column":14}}]},"20":{"line":229,"type":"binary-expr","locations":[{"start":{"line":229,"column":17},"end":{"line":229,"column":74}},{"start":{"line":229,"column":78},"end":{"line":229,"column":134}}]},"21":{"line":289,"type":"if","locations":[{"start":{"line":289,"column":8},"end":{"line":289,"column":8}},{"start":{"line":289,"column":8},"end":{"line":289,"column":8}}]},"22":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":8},"end":{"line":314,"column":8}},{"start":{"line":314,"column":8},"end":{"line":314,"column":8}}]},"23":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":8},"end":{"line":343,"column":8}},{"start":{"line":343,"column":8},"end":{"line":343,"column":8}}]},"24":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":8},"end":{"line":345,"column":8}},{"start":{"line":345,"column":8},"end":{"line":345,"column":8}}]},"25":{"line":384,"type":"if","locations":[{"start":{"line":384,"column":8},"end":{"line":384,"column":8}},{"start":{"line":384,"column":8},"end":{"line":384,"column":8}}]},"26":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":8},"end":{"line":386,"column":8}},{"start":{"line":386,"column":8},"end":{"line":386,"column":8}}]},"27":{"line":435,"type":"binary-expr","locations":[{"start":{"line":435,"column":50},"end":{"line":435,"column":65}},{"start":{"line":435,"column":69},"end":{"line":435,"column":81}}]},"28":{"line":636,"type":"binary-expr","locations":[{"start":{"line":636,"column":44},"end":{"line":636,"column":59}},{"start":{"line":636,"column":63},"end":{"line":636,"column":75}}]},"29":{"line":726,"type":"binary-expr","locations":[{"start":{"line":726,"column":17},"end":{"line":726,"column":23}},{"start":{"line":726,"column":27},"end":{"line":726,"column":29}}]},"30":{"line":727,"type":"if","locations":[{"start":{"line":727,"column":8},"end":{"line":727,"column":8}},{"start":{"line":727,"column":8},"end":{"line":727,"column":8}}]},"31":{"line":735,"type":"binary-expr","locations":[{"start":{"line":735,"column":33},"end":{"line":735,"column":55}},{"start":{"line":735,"column":59},"end":{"line":735,"column":71}}]},"32":{"line":737,"type":"if","locations":[{"start":{"line":737,"column":12},"end":{"line":737,"column":12}},{"start":{"line":737,"column":12},"end":{"line":737,"column":12}}]},"33":{"line":772,"type":"binary-expr","locations":[{"start":{"line":772,"column":17},"end":{"line":772,"column":23}},{"start":{"line":772,"column":27},"end":{"line":772,"column":29}}]},"34":{"line":773,"type":"if","locations":[{"start":{"line":773,"column":8},"end":{"line":773,"column":8}},{"start":{"line":773,"column":8},"end":{"line":773,"column":8}}]},"35":{"line":782,"type":"if","locations":[{"start":{"line":782,"column":8},"end":{"line":782,"column":8}},{"start":{"line":782,"column":8},"end":{"line":782,"column":8}}]},"36":{"line":786,"type":"binary-expr","locations":[{"start":{"line":786,"column":33},"end":{"line":786,"column":55}},{"start":{"line":786,"column":59},"end":{"line":786,"column":71}}]},"37":{"line":788,"type":"cond-expr","locations":[{"start":{"line":788,"column":64},"end":{"line":788,"column":95}},{"start":{"line":788,"column":97},"end":{"line":788,"column":135}}]},"38":{"line":804,"type":"binary-expr","locations":[{"start":{"line":804,"column":17},"end":{"line":804,"column":23}},{"start":{"line":804,"column":27},"end":{"line":804,"column":29}}]},"39":{"line":805,"type":"if","locations":[{"start":{"line":805,"column":8},"end":{"line":805,"column":8}},{"start":{"line":805,"column":8},"end":{"line":805,"column":8}}]},"40":{"line":814,"type":"if","locations":[{"start":{"line":814,"column":8},"end":{"line":814,"column":8}},{"start":{"line":814,"column":8},"end":{"line":814,"column":8}}]},"41":{"line":818,"type":"binary-expr","locations":[{"start":{"line":818,"column":33},"end":{"line":818,"column":55}},{"start":{"line":818,"column":59},"end":{"line":818,"column":71}}]},"42":{"line":820,"type":"cond-expr","locations":[{"start":{"line":820,"column":64},"end":{"line":820,"column":95}},{"start":{"line":820,"column":97},"end":{"line":820,"column":135}}]},"43":{"line":836,"type":"binary-expr","locations":[{"start":{"line":836,"column":17},"end":{"line":836,"column":23}},{"start":{"line":836,"column":27},"end":{"line":836,"column":29}}]},"44":{"line":837,"type":"if","locations":[{"start":{"line":837,"column":8},"end":{"line":837,"column":8}},{"start":{"line":837,"column":8},"end":{"line":837,"column":8}}]},"45":{"line":845,"type":"binary-expr","locations":[{"start":{"line":845,"column":33},"end":{"line":845,"column":55}},{"start":{"line":845,"column":59},"end":{"line":845,"column":71}}]},"46":{"line":998,"type":"binary-expr","locations":[{"start":{"line":998,"column":53},"end":{"line":998,"column":68}},{"start":{"line":998,"column":72},"end":{"line":998,"column":84}}]},"47":{"line":1292,"type":"binary-expr","locations":[{"start":{"line":1292,"column":39},"end":{"line":1292,"column":54}},{"start":{"line":1292,"column":58},"end":{"line":1292,"column":70}}]}},"code":["/**"," *  Diagnostic plugin for Android"," *"," *  Copyright (c) 2015 Working Edge Ltd."," *  Copyright (c) 2012 AVANTIC ESTUDIO DE INGENIEROS"," **/","var Diagnostic = (function(){","","    /***********************","     *","     * Internal properties","     *","     *********************/","    var Diagnostic = {};","","    var runtimeStoragePrefix = \"__diag_rtm_\";","","    var runtimeGroupsMap;","","    // Indicates if a runtime permissions request is in progress","    var requestInProgress = false;","","    /********************","     *","     * Public properties","     *","     ********************/","","    // Placeholder listeners","    Diagnostic._onBluetoothStateChange =","        Diagnostic._onLocationStateChange =","            Diagnostic._onNFCStateChange =","                Diagnostic._onPermissionRequestComplete = function(){};","","","    /**","     * \"Dangerous\" permissions that need to be requested at run-time (Android 6.0/API 23 and above)","     * See http://developer.android.com/guide/topics/security/permissions.html#perm-groups","     * @type {Object}","     */","    Diagnostic.runtimePermission = // deprecated","        Diagnostic.permission = {","            \"READ_CALENDAR\": \"READ_CALENDAR\",","            \"WRITE_CALENDAR\": \"WRITE_CALENDAR\",","            \"CAMERA\": \"CAMERA\",","            \"READ_CONTACTS\": \"READ_CONTACTS\",","            \"WRITE_CONTACTS\": \"WRITE_CONTACTS\",","            \"GET_ACCOUNTS\": \"GET_ACCOUNTS\",","            \"ACCESS_FINE_LOCATION\": \"ACCESS_FINE_LOCATION\",","            \"ACCESS_COARSE_LOCATION\": \"ACCESS_COARSE_LOCATION\",","            \"RECORD_AUDIO\": \"RECORD_AUDIO\",","            \"READ_PHONE_STATE\": \"READ_PHONE_STATE\",","            \"CALL_PHONE\": \"CALL_PHONE\",","            \"ADD_VOICEMAIL\": \"ADD_VOICEMAIL\",","            \"USE_SIP\": \"USE_SIP\",","            \"PROCESS_OUTGOING_CALLS\": \"PROCESS_OUTGOING_CALLS\",","            \"READ_CALL_LOG\": \"READ_CALL_LOG\",","            \"WRITE_CALL_LOG\": \"WRITE_CALL_LOG\",","            \"SEND_SMS\": \"SEND_SMS\",","            \"RECEIVE_SMS\": \"RECEIVE_SMS\",","            \"READ_SMS\": \"READ_SMS\",","            \"RECEIVE_WAP_PUSH\": \"RECEIVE_WAP_PUSH\",","            \"RECEIVE_MMS\": \"RECEIVE_MMS\",","            \"WRITE_EXTERNAL_STORAGE\": \"WRITE_EXTERNAL_STORAGE\",","            \"READ_EXTERNAL_STORAGE\": \"READ_EXTERNAL_STORAGE\",","            \"BODY_SENSORS\": \"BODY_SENSORS\"","        };","","    /**","     * Permission groups indicate which associated permissions will also be requested if a given permission is requested.","     * See http://developer.android.com/guide/topics/security/permissions.html#perm-groups","     * @type {Object}","     */","    Diagnostic.runtimePermissionGroups = // deprecated","        Diagnostic.permissionGroups = {","            \"CALENDAR\": [\"READ_CALENDAR\", \"WRITE_CALENDAR\"],","            \"CAMERA\": [\"CAMERA\"],","            \"CONTACTS\": [\"READ_CONTACTS\", \"WRITE_CONTACTS\", \"GET_ACCOUNTS\"],","            \"LOCATION\": [\"ACCESS_FINE_LOCATION\", \"ACCESS_COARSE_LOCATION\"],","            \"MICROPHONE\": [\"RECORD_AUDIO\"],","            \"PHONE\": [\"READ_PHONE_STATE\", \"CALL_PHONE\", \"ADD_VOICEMAIL\", \"USE_SIP\", \"PROCESS_OUTGOING_CALLS\", \"READ_CALL_LOG\", \"WRITE_CALL_LOG\"],","            \"SENSORS\": [\"BODY_SENSORS\"],","            \"SMS\": [\"SEND_SMS\", \"RECEIVE_SMS\", \"READ_SMS\", \"RECEIVE_WAP_PUSH\", \"RECEIVE_MMS\"],","            \"STORAGE\": [\"READ_EXTERNAL_STORAGE\", \"WRITE_EXTERNAL_STORAGE\"]","        };","","    Diagnostic.runtimePermissionStatus = // deprecated","        Diagnostic.permissionStatus = {","            \"GRANTED\": \"GRANTED\", //  User granted access to this permission, the device is running Android 5.x or below, or the app is built with API 22 or below.","            \"DENIED\": \"DENIED\", // User denied access to this permission","            \"NOT_REQUESTED\": \"NOT_REQUESTED\", // App has not yet requested access to this permission.","            \"DENIED_ALWAYS\": \"DENIED_ALWAYS\" // User denied access to this permission and checked \"Never Ask Again\" box.","        };","","    Diagnostic.locationMode = {","        \"HIGH_ACCURACY\": \"high_accuracy\",","        \"DEVICE_ONLY\": \"device_only\",","        \"BATTERY_SAVING\": \"battery_saving\",","        \"LOCATION_OFF\": \"location_off\"","    };","","    Diagnostic.locationAuthorizationMode = {}; // Empty object to enable easy cross-platform compatibility with iOS","","","    Diagnostic.firstRequestedPermissions;","","    Diagnostic.bluetoothState = {","        \"UNKNOWN\": \"unknown\",","        \"POWERED_OFF\": \"powered_off\",","        \"POWERED_ON\": \"powered_on\",","        \"POWERING_OFF\": \"powering_off\",","        \"POWERING_ON\": \"powering_on\"","    };","","    Diagnostic.NFCState = {","        \"UNKNOWN\": \"unknown\",","        \"POWERED_OFF\": \"powered_off\",","        \"POWERING_ON\": \"powering_on\",","        \"POWERED_ON\": \"powered_on\",","        \"POWERING_OFF\": \"powering_off\"","    };","","","    /********************","     *","     * Internal functions","     *","     ********************/","","    function checkForInvalidPermissions(permissions, errorCallback){","        if(typeof(permissions) !== \"object\") permissions = [permissions];","        var valid = true, invalidPermissions = [];","        permissions.forEach(function(permission){","            if(!Diagnostic.permission[permission]){","                invalidPermissions.push(permission);","            }","        });","        if(invalidPermissions.length > 0){","            errorCallback(\"Invalid permissions specified: \"+invalidPermissions.join(\", \"));","            valid = false;","        }","        return valid;","    }","","    /**","     * Maintains a locally persisted list of which permissions have been requested in order to resolve the returned status of STATUS_NOT_REQUESTED_OR_DENIED_ALWAYS to either NOT_REQUESTED or DENIED_ALWAYS.","     * Since requesting a given permission implicitly requests all other permissions in the same group (e.g. requesting READ_CALENDAR will also grant/deny WRITE_CALENDAR),","     * flag every permission in the groups that were requested.","     * @param {Array} permissions - list of requested permissions","     */","    function updateFirstRequestedPermissions(permissions){","        var groups = {};","","        permissions.forEach(function(permission){","            groups[runtimeGroupsMap[permission]] = 1;","        });","","","        for(var group in groups){","            Diagnostic.permissionGroups[group].forEach(function(permission){","                if(!Diagnostic.firstRequestedPermissions[permission]){","                    setPermissionFirstRequested(permission);","                }","            });","        }","    }","","    function setPermissionFirstRequested(permission){","        localStorage.setItem(runtimeStoragePrefix+permission, 1);","        getFirstRequestedPermissions();","    }","","    function getFirstRequestedPermissions(){","        if(!runtimeGroupsMap){","            buildRuntimeGroupsMap();","        }","        Diagnostic.firstRequestedPermissions = {};","        for(var permission in Diagnostic.permission){","            if(localStorage.getItem(runtimeStoragePrefix+permission) == 1){","                Diagnostic.firstRequestedPermissions[permission] = 1;","            }","        }","        return Diagnostic.firstRequestedPermissions;","    }","","    function resolveStatus(permission, status){","        if(status == \"STATUS_NOT_REQUESTED_OR_DENIED_ALWAYS\"){","            status = Diagnostic.firstRequestedPermissions[permission] ? Diagnostic.permissionStatus.DENIED_ALWAYS : Diagnostic.permissionStatus.NOT_REQUESTED;","        }","        return status;","    }","","    function buildRuntimeGroupsMap(){","        runtimeGroupsMap = {};","        for(var group in Diagnostic.permissionGroups){","            var permissions = Diagnostic.permissionGroups[group];","            for(var i=0; i<permissions.length; i++){","                runtimeGroupsMap[permissions[i]] = group;","            }","        }","    }","","    function combineLocationStatuses(statuses){","        var coarseStatus = statuses[Diagnostic.permission.ACCESS_COARSE_LOCATION],","            fineStatus = statuses[Diagnostic.permission.ACCESS_FINE_LOCATION],","            status;","","        if(coarseStatus == Diagnostic.permissionStatus.DENIED_ALWAYS || fineStatus == Diagnostic.permissionStatus.DENIED_ALWAYS){","            status = Diagnostic.permissionStatus.DENIED_ALWAYS;","        }else if(coarseStatus == Diagnostic.permissionStatus.DENIED || fineStatus == Diagnostic.permissionStatus.DENIED){","            status = Diagnostic.permissionStatus.DENIED;","        }else if(coarseStatus == Diagnostic.permissionStatus.NOT_REQUESTED || fineStatus == Diagnostic.permissionStatus.NOT_REQUESTED){","            status = Diagnostic.permissionStatus.NOT_REQUESTED;","        }else{","            status = Diagnostic.permissionStatus.GRANTED;","        }","        return status;","    }","","    function combineCameraStatuses(statuses){","        var cameraStatus = statuses[Diagnostic.permission.CAMERA],","            mediaStatus = statuses[Diagnostic.permission.READ_EXTERNAL_STORAGE],","            status;","","        if(cameraStatus == Diagnostic.permissionStatus.DENIED_ALWAYS || mediaStatus == Diagnostic.permissionStatus.DENIED_ALWAYS){","            status = Diagnostic.permissionStatus.DENIED_ALWAYS;","        }else if(cameraStatus == Diagnostic.permissionStatus.DENIED || mediaStatus == Diagnostic.permissionStatus.DENIED){","            status = Diagnostic.permissionStatus.DENIED;","        }else if(cameraStatus == Diagnostic.permissionStatus.NOT_REQUESTED || mediaStatus == Diagnostic.permissionStatus.NOT_REQUESTED){","            status = Diagnostic.permissionStatus.NOT_REQUESTED;","        }else{","            status = Diagnostic.permissionStatus.GRANTED;","        }","        return status;","    }","","    function ensureBoolean(callback){","        return function(result){","            callback(!!result);","        }","    }","","    function numberOfKeys(obj){","        var count = 0;","        for(var k in obj){","            count++;","        }","        return count;","    }","","","    /**********************","     *","     * Public API functions","     *","     **********************/","","","    /***********","     * General","     ***********/","","    /**","     * Opens settings page for this app.","     *","     * @param {Function} successCallback - The callback which will be called when switch to settings is successful.","     * @param {Function} errorCallback - The callback which will be called when switch to settings encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.switchToSettings = function(successCallback, errorCallback) {","        return cordova.exec(successCallback,","            errorCallback,","            'Diagnostic',","            'switchToSettings',","            []);","    };","","    /**","     * Returns the current authorisation status for a given permission.","     * Note: this is intended for Android 6 / API 23 and above. Calling on Android 5 / API 22 and below will always return GRANTED status as permissions are already granted at installation time.","     *","     * @param {Function} successCallback - function to call on successful retrieval of status.","     * This callback function is passed a single string parameter which defines the current authorisation status as a value in cordova.plugins.diagnostic.permissionStatus.","     * @param {Function} errorCallback - function to call on failure to retrieve authorisation status.","     * This callback function is passed a single string parameter containing the error message.","     * @param {String} permission - permission to request authorisation status for, defined as a value in cordova.plugins.diagnostic.permission","     */","    Diagnostic.getPermissionAuthorizationStatus = function(successCallback, errorCallback, permission){","        if(!checkForInvalidPermissions(permission, errorCallback)) return;","","        function onSuccess(status){","            successCallback(resolveStatus(permission, status));","        }","","        return cordova.exec(","            onSuccess,","            errorCallback,","            'Diagnostic',","            'getPermissionAuthorizationStatus',","            [permission]);","    };","","    /**","     * Returns the current authorisation status for multiple permissions.","     * Note: this is intended for Android 6 / API 23 and above. Calling on Android 5 / API 22 and below will always return GRANTED status as permissions are already granted at installation time.","     *","     * @param {Function} successCallback - function to call on successful retrieval of status.","     * This callback function is passed a single object parameter which defines a key/value map, where the key is the requested permission defined as a value in cordova.plugins.diagnostic.permission, and the value is the current authorisation status of that permission as a value in cordova.plugins.diagnostic.permissionStatus.","     * @param {Function} errorCallback - function to call on failure to retrieve authorisation statuses.","     * This callback function is passed a single string parameter containing the error message.","     * @param {Array} permissions - list of permissions to request authorisation statuses for, defined as values in cordova.plugins.diagnostic.permission","     */","    Diagnostic.getPermissionsAuthorizationStatus = function(successCallback, errorCallback, permissions){","        if(!checkForInvalidPermissions(permissions, errorCallback)) return;","","        function onSuccess(statuses){","            for(var permission in statuses){","                statuses[permission] = resolveStatus(permission, statuses[permission]);","            }","            successCallback(statuses);","        }","","        return cordova.exec(","            onSuccess,","            errorCallback,","            'Diagnostic',","            'getPermissionsAuthorizationStatus',","            [permissions]);","    };","","","    /**","     * Requests app to be granted authorisation for a runtime permission.","     * Note: this is intended for Android 6 / API 23 and above. Calling on Android 5 / API 22 and below will have no effect as the permissions are already granted at installation time.","     *","     * @param {Function} successCallback - function to call on successful request for runtime permission.","     * This callback function is passed a single string parameter which defines the resulting authorisation status as a value in cordova.plugins.diagnostic.permissionStatus.","     * @param {Function} errorCallback - function to call on failure to request authorisation.","     * This callback function is passed a single string parameter containing the error message.","     * @param {String} permission - permission to request authorisation for, defined as a value in cordova.plugins.diagnostic.permission","     */","    Diagnostic.requestRuntimePermission = function(successCallback, errorCallback, permission) {","        if(!checkForInvalidPermissions(permission, errorCallback)) return;","","        if(requestInProgress){","            return onError(\"A runtime permissions request is already in progress\");","        }","","        function onSuccess(status){","            requestInProgress = false;","            var status = resolveStatus(permission, status[permission]);","            successCallback(status);","            var statuses = {};","            statuses[permission] = status;","            Diagnostic._onPermissionRequestComplete(statuses);","            updateFirstRequestedPermissions([permission]);","        }","","        function onError(error){","            requestInProgress = false;","            errorCallback(error);","        }","","        requestInProgress = true;","        return cordova.exec(","            onSuccess,","            onError,","            'Diagnostic',","            'requestRuntimePermission',","            [permission]);","    };","","    /**","     * Requests app to be granted authorisation for multiple runtime permissions.","     * Note: this is intended for Android 6 / API 23 and above. Calling on Android 5 / API 22 and below will have no effect as the permissions are already granted at installation time.","     *","     * @param {Function} successCallback - function to call on successful request for runtime permissions.","     * This callback function is passed a single object parameter which defines a key/value map, where the key is the permission to request defined as a value in cordova.plugins.diagnostic.permission, and the value is the resulting authorisation status of that permission as a value in cordova.plugins.diagnostic.permissionStatus.","     * @param {Function} errorCallback - function to call on failure to request authorisation.","     * This callback function is passed a single string parameter containing the error message.","     * @param {Array} permissions - permissions to request authorisation for, defined as values in cordova.plugins.diagnostic.permission","     */","    Diagnostic.requestRuntimePermissions = function(successCallback, errorCallback, permissions){","        if(!checkForInvalidPermissions(permissions, errorCallback)) return;","","        if(requestInProgress){","            return onError(\"A runtime permissions request is already in progress\");","        }","","        function onSuccess(statuses){","            requestInProgress = false;","            for(var permission in statuses){","                statuses[permission] = resolveStatus(permission, statuses[permission]);","            }","            successCallback(statuses);","            Diagnostic._onPermissionRequestComplete(statuses);","            updateFirstRequestedPermissions(permissions);","        }","","        function onError(error){","            requestInProgress = false;","            errorCallback(error);","        }","","        requestInProgress = true;","        return cordova.exec(","            onSuccess,","            onError,","            'Diagnostic',","            'requestRuntimePermissions',","            [permissions]);","","    };","","    /**","     * Indicates if the plugin is currently requesting a runtime permission via the native API.","     * Note that only one request can be made concurrently because the native API cannot handle concurrent requests,","     * so the plugin will invoke the error callback if attempting to make more than one simultaneous request.","     * Multiple permission requests should be grouped into a single call since the native API is setup to handle batch requests of multiple permission groups.","     *","     * @return {boolean} true if a permission request is currently in progress.","     */","    Diagnostic.isRequestingPermission = function(){","        return requestInProgress;","    };","","    /**","     * Registers a function to be called when a runtime permission request has completed.","     * Pass in a falsey value to de-register the currently registered function.","     *","     * @param {Function} successCallback -  The callback which will be called when a runtime permission request has completed.","     * This callback function is passed a single object parameter which defines a key/value map, where the key is the permission requested (defined as a value in cordova.plugins.diagnostic.permission) and the value is the resulting authorisation status of that permission as a value in cordova.plugins.diagnostic.permissionStatus.","     */","    Diagnostic.registerPermissionRequestCompleteHandler = function(successCallback) {","        Diagnostic._onPermissionRequestComplete = successCallback || function(){};","    };","","","    /************","     * Location *","     ************/","","    /**","     * Checks if location is available for use by the app.","     * On Android, this returns true if Location Mode is enabled and any mode is selected (e.g. Battery saving, Device only, High accuracy)","     * AND if the app is authorised to use location.","     *","     * @param {Function} successCallback - The callback which will be called when the operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if location is available for use.","     * @param {Function} errorCallback -  The callback which will be called when the operation encounters an error.","     *  This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isLocationAvailable = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isLocationAvailable',","            []);","    };","","    /**","     * Checks if the device location setting is enabled.","     * On Android, this returns true if Location Mode is enabled and any mode is selected (e.g. Battery saving, Device only, High accuracy)","     *","     * @param {Function} successCallback - The callback which will be called when the operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if location setting is enabled.","     * @param {Function} errorCallback -  The callback which will be called when the operation encounters an error.","     *  This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isLocationEnabled = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isLocationEnabled',","            []);","    };","","    /**","     * Checks if high-accuracy locations are available to the app from GPS hardware.","     * Returns true if Location mode is enabled and is set to \"Device only\" or \"High accuracy\"","     * AND if the app is authorised to use location.","     *","     * @param {Function} successCallback -  The callback which will be called when the operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if high-accuracy GPS-based location is available.","     * @param {Function} errorCallback -  The callback which will be called when the operation encounters an error.","     *  This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isGpsLocationAvailable = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isGpsLocationAvailable',","            []);","    };","","    /**","     * Checks if the device location setting is set to return high-accuracy locations from GPS hardware.","     * Returns true if Location mode is enabled and is set to either:","     * Device only = GPS hardware only (high accuracy)","     * High accuracy = GPS hardware, network triangulation and Wifi network IDs (high and low accuracy)","     *","     * @param {Function} successCallback -  The callback which will be called when the operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if device setting is set to return high-accuracy GPS-based location.","     * @param {Function} errorCallback -  The callback which will be called when the operation encounters an error.","     *  This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isGpsLocationEnabled = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isGpsLocationEnabled',","            []);","    };","","    /**","     * Checks if low-accuracy locations are available to the app from network triangulation/WiFi access points.","     * Returns true if Location mode is enabled and is set to \"Battery saving\" or \"High accuracy\"","     * AND if the app is authorised to use location.","     *","     * @param {Function} successCallback -  The callback which will be called when the operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if low-accuracy network-based location is available.","     * @param {Function} errorCallback -  The callback which will be called when the operation encounters an error.","     *  This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isNetworkLocationAvailable = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isNetworkLocationAvailable',","            []);","    };","","    /**","     * Checks if the device location setting is set to return low-accuracy locations from network triangulation/WiFi access points.","     * Returns true if Location mode is enabled and is set to either:","     * Battery saving = network triangulation and Wifi network IDs (low accuracy)","     * High accuracy = GPS hardware, network triangulation and Wifi network IDs (high and low accuracy)","     *","     * @param {Function} successCallback -  The callback which will be called when the operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if device setting is set to return low-accuracy network-based location.","     * @param {Function} errorCallback -  The callback which will be called when the operation encounters an error.","     *  This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isNetworkLocationEnabled = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isNetworkLocationEnabled',","            []);","    };","","    /**","     * Returns the current location mode setting for the device.","     *","     * @param {Function} successCallback -  The callback which will be called when the operation is successful.","     * This callback function is passed a single string parameter defined as a constant in `cordova.plugins.diagnostic.locationMode`.","     * @param {Function} errorCallback -  The callback which will be called when the operation encounters an error.","     *  This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.getLocationMode = function(successCallback, errorCallback) {","        return cordova.exec(successCallback,","            errorCallback,","            'Diagnostic',","            'getLocationMode',","            []);","    };","","    /**","     * Switches to the Location page in the Settings app","     */","    Diagnostic.switchToLocationSettings = function() {","        return cordova.exec(null,","            null,","            'Diagnostic',","            'switchToLocationSettings',","            []);","    };","","    /**","     * Requests location authorization for the application.","     * Note: this is intended for Android 6 / API 23 and above. Calling on Android 5 / API 22 and below will have no effect as the permissions are already granted at installation time.","     * @param {Function} successCallback - function to call on successful request for runtime permissions.","     * This callback function is passed a single string parameter which defines the resulting authorisation status as a value in cordova.plugins.diagnostic.permissionStatus.","     * @param {Function} errorCallback - function to call on failure to request authorisation.","     */","    Diagnostic.requestLocationAuthorization = function(successCallback, errorCallback){","        function onSuccess(statuses){","            successCallback(combineLocationStatuses(statuses));","        }","        Diagnostic.requestRuntimePermissions(onSuccess, errorCallback, [","            Diagnostic.permission.ACCESS_COARSE_LOCATION,","            Diagnostic.permission.ACCESS_FINE_LOCATION","        ]);","    };","","    /**","     * Returns the location authorization status for the application.","     * Note: this is intended for Android 6 / API 23 and above. Calling on Android 5 / API 22 and below will always return GRANTED status as permissions are already granted at installation time.","     * @param {Function} successCallback - function to call on successful request for runtime permissions status.","     * This callback function is passed a single string parameter which defines the current authorisation status as a value in cordova.plugins.diagnostic.permissionStatus.","     * @param {Function} errorCallback - function to call on failure to request authorisation status.","     */","    Diagnostic.getLocationAuthorizationStatus = function(successCallback, errorCallback){","        function onSuccess(statuses){","            successCallback(combineLocationStatuses(statuses));","        }","        Diagnostic.getPermissionsAuthorizationStatus(onSuccess, errorCallback, [","            Diagnostic.permission.ACCESS_COARSE_LOCATION,","            Diagnostic.permission.ACCESS_FINE_LOCATION","        ]);","    };","","    /**","     * Checks if the application is authorized to use location.","     * Note: this is intended for Android 6 / API 23 and above. Calling on Android 5 / API 22 and below will always return TRUE as permissions are already granted at installation time.","     * @param {Function} successCallback - function to call on successful request for runtime permissions status.","     * This callback function is passed a single boolean parameter which is TRUE if the app currently has runtime authorisation to use location.","     * @param {Function} errorCallback - function to call on failure to request authorisation status.","     */","    Diagnostic.isLocationAuthorized = function(successCallback, errorCallback){","        function onSuccess(status){","            successCallback(status == Diagnostic.permissionStatus.GRANTED);","        }","        Diagnostic.getLocationAuthorizationStatus(onSuccess, errorCallback);","    };","","    /**","     * Registers a function to be called when a change in Location state occurs.","     * On Android, this occurs when the Location Mode is changed.","     * Pass in a falsey value to de-register the currently registered function.","     *","     * @param {Function} successCallback -  The callback which will be called when the Location state changes.","     * This callback function is passed a single string parameter defined as a constant in `cordova.plugins.diagnostic.locationMode`.","     */","    Diagnostic.registerLocationStateChangeHandler = function(successCallback) {","        Diagnostic._onLocationStateChange = successCallback || function(){};","    };","","    /************","     * WiFi     *","     ************/","","    /**","     * Checks if Wifi is enabled.","     * On Android this returns true if the WiFi setting is set to enabled.","     *","     * @param {Function} successCallback -  The callback which will be called when the operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if WiFi is enabled.","     * @param {Function} errorCallback -  The callback which will be called when the operation encounters an error.","     *  This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isWifiAvailable = Diagnostic.isWifiEnabled = function(successCallback, errorCallback) {","        return cordova.exec(successCallback,","            errorCallback,","            'Diagnostic',","            'isWifiAvailable',","            []);","    };","","    /**","     * Switches to the WiFi page in the Settings app","     */","    Diagnostic.switchToWifiSettings = function() {","        return cordova.exec(null,","            null,","            'Diagnostic',","            'switchToWifiSettings',","            []);","    };","","    /**","     * Switches to the wireless settings page in the Settings app.","     * Allows configuration of wireless controls such as Wi-Fi, Bluetooth and Mobile networks.","     */","    Diagnostic.switchToWirelessSettings = function() {","        return cordova.exec(null,","            null,","            'Diagnostic',","            'switchToWirelessSettings',","            []);","    };","","    /**","     * Switches to the nfc settings page in the Settings app","     */","    Diagnostic.switchToNFCSettings = function() {","        return cordova.exec(null,","            null,","            'Diagnostic',","            'switchToNFCSettings',","            []);","    };","","    /**","     * Enables/disables WiFi on the device.","     *","     * @param {Function} successCallback - function to call on successful setting of WiFi state","     * @param {Function} errorCallback - function to call on failure to set WiFi state.","     * This callback function is passed a single string parameter containing the error message.","     * @param {Boolean} state - WiFi state to set: TRUE for enabled, FALSE for disabled.","     */","    Diagnostic.setWifiState = function(successCallback, errorCallback, state) {","        return cordova.exec(successCallback,","            errorCallback,","            'Diagnostic',","            'setWifiState',","            [state]);","    };","","    /************","     * Camera   *","     ************/","","    /**","     * Checks if camera is usable: both present and authorised for use.","     *","     * @param {Object} params - (optional) parameters:","     *  - {Function} successCallback -  The callback which will be called when the operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if camera is present and authorized for use.","     *  - {Function} errorCallback -  The callback which will be called when the operation encounters an error.","     *  This callback function is passed a single string parameter containing the error message.","     *  - {Boolean} externalStorage - (Android only) If true, checks permission for READ_EXTERNAL_STORAGE in addition to CAMERA run-time permission.","     *  cordova-plugin-camera@2.2+ requires both of these permissions. Defaults to true.","     */","    Diagnostic.isCameraAvailable = function(params) {","        params = params || {};","        if (typeof arguments[0]  === \"function\") {","            console.warn('The API signature \"cordova.plugins.diagnostic.isCameraAvailable(successCallback, errorCallback)\" is deprecated in favour of \"cordova.plugins.diagnostic.isCameraAvailable(params)\". See documentation for details.');","            params = {","                successCallback: arguments[0],","                errorCallback: arguments[1]","            };","        }","","        params.successCallback = params.successCallback || function(){};","        Diagnostic.isCameraPresent(function(isPresent){","            if(isPresent){","                Diagnostic.isCameraAuthorized(params);","            }else{","                params.successCallback(!!isPresent);","            }","        },params.errorCallback);","    };","","    /**","     * Checks if camera hardware is present on device.","     *","     * @param {Function} successCallback -  The callback which will be called when the operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if camera is present","     * @param {Function} errorCallback -  The callback which will be called when the operation encounters an error.","     *  This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isCameraPresent = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isCameraPresent',","            []);","    };","","    /**","     * Requests authorisation for runtime permissions to use the camera.","     * Note: this is intended for Android 6 / API 23 and above. Calling on Android 5 / API 22 and below will have no effect as the permissions are already granted at installation time.","     * @param {Object} params - (optional) parameters:","     *  - {Function} successCallback - function to call on successful request for runtime permissions.","     * This callback function is passed a single string parameter which defines the resulting authorisation status as a value in cordova.plugins.diagnostic.permissionStatus.","     *  - {Function} errorCallback - function to call on failure to request authorisation.","     *  - {Boolean} externalStorage - (Android only) If true, requests permission for READ_EXTERNAL_STORAGE in addition to CAMERA run-time permission.","     *  cordova-plugin-camera@2.2+ requires both of these permissions. Defaults to true.","     */","    Diagnostic.requestCameraAuthorization = function(params){","        params = params || {};","        if (typeof arguments[0]  === \"function\") {","            console.warn('The API signature \"cordova.plugins.diagnostic.requestCameraAuthorization(successCallback, errorCallback)\" is deprecated in favour of \"cordova.plugins.diagnostic.requestCameraAuthorization(params)\". See documentation for details.');","            params = {","                successCallback: arguments[0],","                errorCallback: arguments[1]","            };","        }","","        var permissions = [Diagnostic.permission.CAMERA];","        if(params.externalStorage !== false){","            permissions.push(Diagnostic.permission.READ_EXTERNAL_STORAGE);","        }","","        params.successCallback = params.successCallback || function(){};","        var onSuccess = function(statuses){","            params.successCallback(numberOfKeys(statuses) > 1 ? combineCameraStatuses(statuses): statuses[Diagnostic.permission.CAMERA]);","        };","        Diagnostic.requestRuntimePermissions(onSuccess, params.errorCallback, permissions);","    };","","    /**","     * Returns the authorisation status for runtime permissions to use the camera.","     * Note: this is intended for Android 6 / API 23 and above. Calling on Android 5 / API 22 and below will always return GRANTED status as permissions are already granted at installation time.","     * @param {Object} params - (optional) parameters:","     *  - {Function} successCallback - function to call on successful request for runtime permissions status.","     * This callback function is passed a single string parameter which defines the current authorisation status as a value in cordova.plugins.diagnostic.permissionStatus.","     *  - {Function} errorCallback - function to call on failure to request authorisation status.","     *  - {Boolean} externalStorage - (Android only) If true, checks permission for READ_EXTERNAL_STORAGE in addition to CAMERA run-time permission.","     *  cordova-plugin-camera@2.2+ requires both of these permissions. Defaults to true.","     */","    Diagnostic.getCameraAuthorizationStatus = function(params){","        params = params || {};","        if (typeof arguments[0]  === \"function\") {","            console.warn('The API signature \"cordova.plugins.diagnostic.getCameraAuthorizationStatus(successCallback, errorCallback)\" is deprecated in favour of \"cordova.plugins.diagnostic.getCameraAuthorizationStatus(params)\". See documentation for details.');","            params = {","                successCallback: arguments[0],","                errorCallback: arguments[1]","            };","        }","","        var permissions = [Diagnostic.permission.CAMERA];","        if(params.externalStorage !== false){","            permissions.push(Diagnostic.permission.READ_EXTERNAL_STORAGE);","        }","","        params.successCallback = params.successCallback || function(){};","        var onSuccess = function(statuses){","            params.successCallback(numberOfKeys(statuses) > 1 ? combineCameraStatuses(statuses): statuses[Diagnostic.permission.CAMERA]);","        };","        Diagnostic.getPermissionsAuthorizationStatus(onSuccess, params.errorCallback, permissions);","    };","","    /**","     * Checks if the application is authorized to use the camera.","     * Note: this is intended for Android 6 / API 23 and above. Calling on Android 5 / API 22 and below will always return TRUE as permissions are already granted at installation time.","     * @param {Object} params - (optional) parameters:","     *  - {Function} successCallback - function to call on successful request for runtime permissions status.","     * This callback function is passed a single boolean parameter which is TRUE if the app currently has runtime authorisation to use location.","     *  - {Function} errorCallback - function to call on failure to request authorisation status.","     *  - {Boolean} externalStorage - (Android only) If true, checks permission for READ_EXTERNAL_STORAGE in addition to CAMERA run-time permission.","     *  cordova-plugin-camera@2.2+ requires both of these permissions. Defaults to true.","     */","    Diagnostic.isCameraAuthorized = function(params){","        params = params || {};","        if (typeof arguments[0]  === \"function\") {","            console.warn('The API signature \"cordova.plugins.diagnostic.isCameraAuthorized(successCallback, errorCallback)\" is deprecated in favour of \"cordova.plugins.diagnostic.isCameraAuthorized(params)\". See documentation for details.');","            params = {","                successCallback: arguments[0],","                errorCallback: arguments[1]","            };","        }","","        params.successCallback = params.successCallback || function(){};","        var onSuccess = function(status){","            params.successCallback(status == Diagnostic.permissionStatus.GRANTED);","        };","","        Diagnostic.getCameraAuthorizationStatus({","            successCallback: onSuccess,","            errorCallback: params.errorCallback,","            externalStorage: params.externalStorage","        });","    };","","    /**********************","     * External storage   *","     **********************/","    /**","     * Requests authorisation for runtime permission to use the external storage.","     * Note: this is intended for Android 6 / API 23 and above. Calling on Android 5 / API 22 and below will have no effect as the permission is already granted at installation time.","     * @param {Function} successCallback - function to call on successful request for runtime permission.","     * This callback function is passed a single string parameter which defines the resulting authorisation status as a value in cordova.plugins.diagnostic.permissionStatus.","     * @param {Function} errorCallback - function to call on failure to request authorisation.","     */","    Diagnostic.requestExternalStorageAuthorization = function(successCallback, errorCallback){","        Diagnostic.requestRuntimePermission(successCallback, errorCallback, Diagnostic.permission.READ_EXTERNAL_STORAGE);","    };","","    /**","     * Returns the authorisation status for runtime permission to use the external storage.","     * Note: this is intended for Android 6 / API 23 and above. Calling on Android 5 / API 22 and below will always return GRANTED status as permission is already granted at installation time.","     * @param {Function} successCallback - function to call on successful request for runtime permission status.","     * This callback function is passed a single string parameter which defines the current authorisation status as a value in cordova.plugins.diagnostic.permissionStatus.","     * @param {Function} errorCallback - function to call on failure to request authorisation status.","     */","    Diagnostic.getExternalStorageAuthorizationStatus = function(successCallback, errorCallback){","        Diagnostic.getPermissionAuthorizationStatus(successCallback, errorCallback, Diagnostic.permission.READ_EXTERNAL_STORAGE);","    };","","    /**","     * Checks if the application is authorized to use external storage.","     * Note: this is intended for Android 6 / API 23 and above. Calling on Android 5 / API 22 and below will always return TRUE as permissions are already granted at installation time.","     * @param {Function} successCallback - function to call on successful request for runtime permissions status.","     * This callback function is passed a single boolean parameter which is TRUE if the app currently has runtime authorisation to external storage.","     * @param {Function} errorCallback - function to call on failure to request authorisation status.","     */","    Diagnostic.isExternalStorageAuthorized = function(successCallback, errorCallback){","        function onSuccess(status){","            successCallback(status == Diagnostic.permissionStatus.GRANTED);","        }","        Diagnostic.getExternalStorageAuthorizationStatus(onSuccess, errorCallback);","    };","","    /**","     * Returns details of external SD card(s): absolute path, is writable, free space","     * @param {Function} successCallback - function to call on successful request for external SD card details.","     * This callback function is passed a single argument which is an array consisting of an entry for each external storage location found.","     * Each array entry is an object with the following keys:","     * - {String} path - absolute path to the storage location","     * - {String} filePath - absolute path prefixed with file protocol for use with cordova-plugin-file","     * - {Boolean} canWrite - true if the location is writable","     * - {Integer} freeSpace - number of bytes of free space on the device on which the storage locaiton is mounted.","     * - {String} type - indicates the type of storage location: either \"application\" if the path is an Android application sandbox path or \"root\" if the path is the device root.","     * @param {Function} errorCallback - function to call on failure to request authorisation status.","     */","    Diagnostic.getExternalSdCardDetails = function(successCallback, errorCallback){","        return cordova.exec(successCallback,","            errorCallback,","            'Diagnostic',","            'getExternalSdCardDetails',","            []);","    };","","","    /***************","     * Bluetooth   *","     ***************/","","    /**","     * Checks if Bluetooth is available to the app.","     * Returns true if the device has Bluetooth capabilities and if so that Bluetooth is switched on","     *","     * @param {Function} successCallback -  The callback which will be called when the operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if Bluetooth is available.","     * @param {Function} errorCallback -  The callback which will be called when the operation encounters an error.","     *  This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isBluetoothAvailable = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isBluetoothAvailable',","            []);","    };","","    /**","     * Checks if the device setting for Bluetooth is switched on.","     *","     * @param {Function} successCallback -  The callback which will be called when the operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if Bluetooth is switched on.","     * @param {Function} errorCallback -  The callback which will be called when the operation encounters an error.","     *  This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isBluetoothEnabled = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isBluetoothEnabled',","            []);","    };","","    /**","     * Enables/disables Bluetooth on the device.","     *","     * @param {Function} successCallback - function to call on successful setting of Bluetooth state","     * @param {Function} errorCallback - function to call on failure to set Bluetooth state.","     * This callback function is passed a single string parameter containing the error message.","     * @param {Boolean} state - Bluetooth state to set: TRUE for enabled, FALSE for disabled.","     */","    Diagnostic.setBluetoothState = function(successCallback, errorCallback, state) {","        return cordova.exec(successCallback,","            errorCallback,","            'Diagnostic',","            'setBluetoothState',","            [state]);","    };","","    /**","     * Returns current state of Bluetooth hardware on the device.","     *","     * @param {Function} successCallback -  The callback which will be called when the operation is successful.","     * This callback function is passed a single string parameter defined as a constant in `cordova.plugins.diagnostic.bluetoothState`.","     * @param {Function} errorCallback -  The callback which will be called when the operation encounters an error.","     *  This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.getBluetoothState = function(successCallback, errorCallback) {","        return cordova.exec(successCallback,","            errorCallback,","            'Diagnostic',","            'getBluetoothState',","            []);","    };","","    /**","     * Registers a listener function to call when the state of Bluetooth hardware changes.","     * Pass in a falsey value to de-register the currently registered function.","     *","     * @param {Function} successCallback -  The callback which will be called when the state of Bluetooth hardware changes.","     * This callback function is passed a single string parameter defined as a constant in `cordova.plugins.diagnostic.bluetoothState`.","     * @param {Function} errorCallback -  The callback which will be called when the operation encounters an error.","     *  This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.registerBluetoothStateChangeHandler = function(successCallback, errorCallback) {","        cordova.exec(","            function(){","                Diagnostic._onBluetoothStateChange = successCallback || function(){};","            },","            errorCallback,","            'Diagnostic',","            'initializeBluetoothListener',","            []","        );","    };","","","    /**","     * Checks if the device has Bluetooth capabilities.","     * See http://developer.android.com/guide/topics/connectivity/bluetooth.html.","     *","     * @param {Function} successCallback -  The callback which will be called when the operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if device has Bluetooth capabilities.","     * @param {Function} errorCallback -  The callback which will be called when the operation encounters an error.","     *  This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.hasBluetoothSupport = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'hasBluetoothSupport', []);","    };","","    /**","     * Checks if the device has Bluetooth Low Energy (LE) capabilities.","     * See http://developer.android.com/guide/topics/connectivity/bluetooth-le.html.","     *","     * @param {Function} successCallback -  The callback which will be called when the operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if device has Bluetooth LE capabilities.","     * @param {Function} errorCallback -  The callback which will be called when the operation encounters an error.","     *  This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.hasBluetoothLESupport = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'hasBluetoothLESupport', []);","    };","","    /**","     * Checks if the device has Bluetooth Low Energy (LE) capabilities.","     * See http://developer.android.com/guide/topics/connectivity/bluetooth-le.html.","     *","     * @param {Function} successCallback -  The callback which will be called when the operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if device has Bluetooth LE capabilities.","     * @param {Function} errorCallback -  The callback which will be called when the operation encounters an error.","     *  This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.hasBluetoothLESupport = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'hasBluetoothLESupport', []);","    };","","    /**","     * Checks if the device has Bluetooth Low Energy (LE) peripheral capabilities.","     * See http://developer.android.com/guide/topics/connectivity/bluetooth-le.html#roles.","     *","     * @param {Function} successCallback -  The callback which will be called when the operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if device has Bluetooth LE peripheral capabilities.","     * @param {Function} errorCallback -  The callback which will be called when the operation encounters an error.","     *  This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.hasBluetoothLEPeripheralSupport = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'hasBluetoothLEPeripheralSupport', []);","    };","","    /**","     * Switches to the Bluetooth page in the Settings app","     */","    Diagnostic.switchToBluetoothSettings = function() {","        return cordova.exec(null,","            null,","            'Diagnostic',","            'switchToBluetoothSettings',","            []);","    };","","","    /*************","     * Mobile Data","     *************/","","    /**","     * Switches to the Mobile Data page in the Settings app","     */","    Diagnostic.switchToMobileDataSettings = function() {","        return cordova.exec(null,","            null,","            'Diagnostic',","            'switchToMobileDataSettings',","            []);","    };","","","    /***************************","     * Microphone / Record Audio","     ***************************/","","    /**","     * Checks if the application is authorized to use the microphone for recording audio.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if access to microphone is authorized.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isMicrophoneAuthorized = function(successCallback, errorCallback) {","        function onSuccess(status){","            successCallback(status == Diagnostic.permissionStatus.GRANTED);","        }","        Diagnostic.getMicrophoneAuthorizationStatus(onSuccess, errorCallback);","    };","","    /**","     * Returns the authorization status for the application to use the microphone for recording audio.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single string parameter which indicates the authorization status.","     * Possible values are: \"unknown\", \"denied\", \"not_determined\", \"authorized\"","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.getMicrophoneAuthorizationStatus = function(successCallback, errorCallback) {","        Diagnostic.getPermissionAuthorizationStatus(successCallback, errorCallback, Diagnostic.permission.RECORD_AUDIO);","    };","","    /**","     * Requests access to microphone if authorization was never granted nor denied, will only return access status otherwise.","     *","     * @param {Function} successCallback - The callback which will be called when authorization request is successful.","     * @param {Function} errorCallback - The callback which will be called when an error occurs.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.requestMicrophoneAuthorization = function(successCallback, errorCallback) {","        Diagnostic.requestRuntimePermission(successCallback, errorCallback, Diagnostic.permission.RECORD_AUDIO);","    };","","    /*************","     * Contacts","     *************/","","    /**","     *Checks if the application is authorized to use contacts (address book).","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if access to microphone is authorized.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isContactsAuthorized = function(successCallback, errorCallback) {","        function onSuccess(status){","            successCallback(status == Diagnostic.permissionStatus.GRANTED);","        }","        Diagnostic.getContactsAuthorizationStatus(onSuccess, errorCallback);","    };","","    /**","     * Returns the contacts (address book) authorization status for the application.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single string parameter which indicates the authorization status.","     * Possible values are: \"unknown\", \"denied\", \"not_determined\", \"authorized\"","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.getContactsAuthorizationStatus = function(successCallback, errorCallback) {","        Diagnostic.getPermissionAuthorizationStatus(successCallback, errorCallback, Diagnostic.permission.READ_CONTACTS);","    };","","    /**","     *  Requests contacts (address book) authorization for the application.","     *  Should only be called if authorization status is NOT_REQUESTED. Calling it when in any other state will have no effect.","     *","     * @param {Function} successCallback - The callback which will be called when authorization request is successful.","     * @param {Function} errorCallback - The callback which will be called when an error occurs.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.requestContactsAuthorization = function(successCallback, errorCallback) {","        Diagnostic.requestRuntimePermission(successCallback, errorCallback, Diagnostic.permission.READ_CONTACTS);","    };","","    /*************","     * Calendar","     *************/","","    /**","     *Checks if the application is authorized to use calendar.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if access to microphone is authorized.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isCalendarAuthorized = function(successCallback, errorCallback) {","        function onSuccess(status){","            successCallback(status == Diagnostic.permissionStatus.GRANTED);","        }","        Diagnostic.getCalendarAuthorizationStatus(onSuccess, errorCallback);","    };","","    /**","     * Returns the calendar authorization status for the application.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single string parameter which indicates the authorization status.","     * Possible values are: \"unknown\", \"denied\", \"not_determined\", \"authorized\"","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.getCalendarAuthorizationStatus = function(successCallback, errorCallback) {","        Diagnostic.getPermissionAuthorizationStatus(successCallback, errorCallback, Diagnostic.permission.READ_CALENDAR);","    };","","    /**","     *  Requests calendar authorization for the application.","     *  Should only be called if authorization status is NOT_REQUESTED. Calling it when in any other state will have no effect.","     *","     * @param {Function} successCallback - The callback which will be called when authorization request is successful.","     * @param {Function} errorCallback - The callback which will be called when an error occurs.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.requestCalendarAuthorization = function(successCallback, errorCallback) {","        Diagnostic.requestRuntimePermission(successCallback, errorCallback, Diagnostic.permission.READ_CALENDAR);","    };","","    /*************","     * NFC","     *************/","","    /**","     * Checks if NFC hardware is present on device.","     *","     * @param {Function} successCallback -  The callback which will be called when the operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if NFC is present","     * @param {Function} errorCallback -  The callback which will be called when the operation encounters an error.","     *  This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isNFCPresent = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isNFCPresent',","            []);","    };","","    /**","     * Checks if the device setting for NFC is switched on.","     *","     * @param {Function} successCallback -  The callback which will be called when the operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if NFC is switched on.","     * @param {Function} errorCallback -  The callback which will be called when the operation encounters an error.","     *  This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isNFCEnabled = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isNFCEnabled',","            []);","    };","","    /**","     * Checks if NFC is available to the app.","     * Returns true if the device has NFC capabilities and if so that NFC is switched on.","     *","     * @param {Function} successCallback -  The callback which will be called when the operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if NFC is available.","     * @param {Function} errorCallback -  The callback which will be called when the operation encounters an error.","     *  This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isNFCAvailable = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isNFCAvailable',","            []);","    };","","    /**","     * Registers a function to be called when a change in NFC state occurs.","     * Pass in a falsey value to de-register the currently registered function.","     *","     * @param {Function} successCallback -  The callback which will be called when the NFC state changes.","     * This callback function is passed a single string parameter defined as a constant in `cordova.plugins.diagnostic.NFCState`.","     */","    Diagnostic.registerNFCStateChangeHandler = function(successCallback) {","        Diagnostic._onNFCStateChange = successCallback || function(){};","    };","","","    /**************","     * Constructor","     **************/","    getFirstRequestedPermissions();","","    return Diagnostic;","});","module.exports = new Diagnostic();",""],"l":{"7":2,"14":2,"16":2,"18":2,"21":2,"30":2,"41":2,"74":2,"87":2,"95":2,"102":2,"105":2,"107":2,"115":2,"130":1,"131":0,"132":0,"133":0,"134":0,"135":0,"138":0,"139":0,"140":0,"142":0,"151":1,"152":0,"154":0,"155":0,"159":0,"160":0,"161":0,"162":0,"168":1,"169":0,"170":0,"173":1,"174":2,"175":2,"177":2,"178":2,"179":2,"180":0,"183":0,"186":1,"187":0,"188":0,"190":0,"193":1,"194":2,"195":2,"196":18,"197":18,"198":48,"203":1,"204":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"215":0,"217":0,"220":1,"221":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"232":0,"234":0,"237":1,"238":0,"239":0,"243":1,"244":0,"245":0,"246":0,"248":0,"270":2,"271":0,"288":2,"289":0,"291":1,"292":0,"295":0,"313":2,"314":0,"316":1,"317":0,"318":0,"320":0,"323":0,"342":2,"343":0,"345":0,"346":0,"349":1,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"359":1,"360":0,"361":0,"364":0,"365":0,"383":2,"384":0,"386":0,"387":0,"390":1,"391":0,"392":0,"393":0,"395":0,"396":0,"397":0,"400":1,"401":0,"402":0,"405":0,"406":0,"423":2,"424":0,"434":2,"435":0,"453":2,"454":0,"470":2,"471":0,"488":2,"489":0,"507":2,"508":0,"525":2,"526":0,"544":2,"545":0,"560":2,"561":0,"571":2,"572":0,"586":2,"587":1,"588":0,"590":0,"603":2,"604":1,"605":0,"607":0,"620":2,"621":1,"622":0,"624":0,"635":2,"636":0,"652":2,"653":0,"663":2,"664":0,"675":2,"676":0,"686":2,"687":0,"702":2,"703":0,"725":2,"726":0,"727":0,"728":0,"729":0,"735":0,"736":0,"737":0,"738":0,"740":0,"753":2,"754":0,"771":2,"772":0,"773":0,"774":0,"775":0,"781":0,"782":0,"783":0,"786":0,"787":0,"788":0,"790":0,"803":2,"804":0,"805":0,"806":0,"807":0,"813":0,"814":0,"815":0,"818":0,"819":0,"820":0,"822":0,"835":2,"836":0,"837":0,"838":0,"839":0,"845":0,"846":0,"847":0,"850":0,"867":2,"868":0,"878":2,"879":0,"889":2,"890":1,"891":0,"893":0,"908":2,"909":0,"930":2,"931":0,"946":2,"947":0,"962":2,"963":0,"978":2,"979":0,"995":2,"996":0,"998":0,"1017":2,"1018":0,"1033":2,"1034":0,"1049":2,"1050":0,"1065":2,"1066":0,"1075":2,"1076":0,"1091":2,"1092":0,"1112":2,"1113":1,"1114":0,"1116":0,"1128":2,"1129":0,"1139":2,"1140":0,"1155":2,"1156":1,"1157":0,"1159":0,"1171":2,"1172":0,"1183":2,"1184":0,"1199":2,"1200":1,"1201":0,"1203":0,"1215":2,"1216":0,"1227":2,"1228":0,"1243":2,"1244":0,"1259":2,"1260":0,"1276":2,"1277":0,"1291":2,"1292":0,"1299":2,"1301":0,"1303":2}},"/home/travis/build/npmtest/node-npmtest-cordova.plugins.diagnostic/node_modules/cordova.plugins.diagnostic/www/ios/diagnostic.js":{"path":"/home/travis/build/npmtest/node-npmtest-cordova.plugins.diagnostic/node_modules/cordova.plugins.diagnostic/www/ios/diagnostic.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":1,"13":0,"14":1,"15":0,"16":1,"17":0,"18":1,"19":0,"20":1,"21":0,"22":1,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":1,"56":0,"57":1,"58":0,"59":0,"60":1,"61":0,"62":1,"63":0,"64":1,"65":0,"66":1,"67":0,"68":1,"69":0,"70":1,"71":0,"72":1,"73":0,"74":1,"75":0,"76":1,"77":0,"78":0,"79":1,"80":0,"81":1,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":0,"89":1,"90":0,"91":1,"92":0,"93":1,"94":0,"95":0,"96":1,"97":0,"98":1,"99":0,"100":1,"101":0,"102":0,"103":1,"104":0,"105":1,"106":0,"107":1,"108":0,"109":0,"110":1,"111":0,"112":1,"113":0,"114":0,"115":1,"116":0,"117":1,"118":0,"119":1,"120":0,"121":1,"122":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":28}}},"2":{"name":"ensureBoolean","line":13,"loc":{"start":{"line":13,"column":4},"end":{"line":13,"column":36}}},"3":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":15},"end":{"line":14,"column":31}}},"4":{"name":"(anonymous_4)","line":54,"loc":{"start":{"line":54,"column":44},"end":{"line":54,"column":54}}},"5":{"name":"(anonymous_5)","line":74,"loc":{"start":{"line":74,"column":34},"end":{"line":74,"column":75}}},"6":{"name":"(anonymous_6)","line":97,"loc":{"start":{"line":97,"column":37},"end":{"line":97,"column":78}}},"7":{"name":"(anonymous_7)","line":114,"loc":{"start":{"line":114,"column":35},"end":{"line":114,"column":76}}},"8":{"name":"(anonymous_8)","line":131,"loc":{"start":{"line":131,"column":38},"end":{"line":131,"column":79}}},"9":{"name":"(anonymous_9)","line":153,"loc":{"start":{"line":153,"column":48},"end":{"line":153,"column":89}}},"10":{"name":"(anonymous_10)","line":177,"loc":{"start":{"line":177,"column":46},"end":{"line":177,"column":93}}},"11":{"name":"(anonymous_11)","line":196,"loc":{"start":{"line":196,"column":52},"end":{"line":196,"column":78}}},"12":{"name":"(anonymous_12)","line":197,"loc":{"start":{"line":197,"column":63},"end":{"line":197,"column":73}}},"13":{"name":"(anonymous_13)","line":214,"loc":{"start":{"line":214,"column":35},"end":{"line":214,"column":52}}},"14":{"name":"(anonymous_14)","line":224,"loc":{"start":{"line":224,"column":59},"end":{"line":224,"column":69}}},"15":{"name":"(anonymous_15)","line":240,"loc":{"start":{"line":240,"column":33},"end":{"line":240,"column":74}}},"16":{"name":"(anonymous_16)","line":258,"loc":{"start":{"line":258,"column":36},"end":{"line":258,"column":53}}},"17":{"name":"(anonymous_17)","line":284,"loc":{"start":{"line":284,"column":46},"end":{"line":284,"column":63}}},"18":{"name":"(anonymous_18)","line":312,"loc":{"start":{"line":312,"column":44},"end":{"line":312,"column":60}}},"19":{"name":"(anonymous_19)","line":322,"loc":{"start":{"line":322,"column":59},"end":{"line":322,"column":69}}},"20":{"name":"(anonymous_20)","line":323,"loc":{"start":{"line":323,"column":28},"end":{"line":323,"column":47}}},"21":{"name":"(anonymous_21)","line":340,"loc":{"start":{"line":340,"column":40},"end":{"line":340,"column":81}}},"22":{"name":"(anonymous_22)","line":356,"loc":{"start":{"line":356,"column":50},"end":{"line":356,"column":91}}},"23":{"name":"(anonymous_23)","line":374,"loc":{"start":{"line":374,"column":48},"end":{"line":374,"column":89}}},"24":{"name":"(anonymous_24)","line":375,"loc":{"start":{"line":375,"column":28},"end":{"line":375,"column":44}}},"25":{"name":"(anonymous_25)","line":397,"loc":{"start":{"line":397,"column":33},"end":{"line":397,"column":74}}},"26":{"name":"(anonymous_26)","line":414,"loc":{"start":{"line":414,"column":31},"end":{"line":414,"column":72}}},"27":{"name":"(anonymous_27)","line":434,"loc":{"start":{"line":434,"column":38},"end":{"line":434,"column":79}}},"28":{"name":"(anonymous_28)","line":450,"loc":{"start":{"line":450,"column":35},"end":{"line":450,"column":76}}},"29":{"name":"(anonymous_29)","line":468,"loc":{"start":{"line":468,"column":53},"end":{"line":468,"column":93}}},"30":{"name":"(anonymous_30)","line":469,"loc":{"start":{"line":469,"column":64},"end":{"line":469,"column":74}}},"31":{"name":"(anonymous_31)","line":481,"loc":{"start":{"line":481,"column":47},"end":{"line":481,"column":88}}},"32":{"name":"(anonymous_32)","line":502,"loc":{"start":{"line":502,"column":40},"end":{"line":502,"column":81}}},"33":{"name":"(anonymous_33)","line":518,"loc":{"start":{"line":518,"column":50},"end":{"line":518,"column":91}}},"34":{"name":"(anonymous_34)","line":536,"loc":{"start":{"line":536,"column":48},"end":{"line":536,"column":89}}},"35":{"name":"(anonymous_35)","line":537,"loc":{"start":{"line":537,"column":28},"end":{"line":537,"column":47}}},"36":{"name":"(anonymous_36)","line":560,"loc":{"start":{"line":560,"column":46},"end":{"line":560,"column":87}}},"37":{"name":"(anonymous_37)","line":580,"loc":{"start":{"line":580,"column":44},"end":{"line":580,"column":85}}},"38":{"name":"(anonymous_38)","line":581,"loc":{"start":{"line":581,"column":28},"end":{"line":581,"column":44}}},"39":{"name":"(anonymous_39)","line":606,"loc":{"start":{"line":606,"column":52},"end":{"line":606,"column":93}}},"40":{"name":"(anonymous_40)","line":626,"loc":{"start":{"line":626,"column":38},"end":{"line":626,"column":79}}},"41":{"name":"(anonymous_41)","line":642,"loc":{"start":{"line":642,"column":48},"end":{"line":642,"column":89}}},"42":{"name":"(anonymous_42)","line":660,"loc":{"start":{"line":660,"column":46},"end":{"line":660,"column":87}}},"43":{"name":"(anonymous_43)","line":661,"loc":{"start":{"line":661,"column":28},"end":{"line":661,"column":47}}},"44":{"name":"(anonymous_44)","line":682,"loc":{"start":{"line":682,"column":38},"end":{"line":682,"column":79}}},"45":{"name":"(anonymous_45)","line":698,"loc":{"start":{"line":698,"column":48},"end":{"line":698,"column":89}}},"46":{"name":"(anonymous_46)","line":716,"loc":{"start":{"line":716,"column":46},"end":{"line":716,"column":87}}},"47":{"name":"(anonymous_47)","line":717,"loc":{"start":{"line":717,"column":28},"end":{"line":717,"column":47}}},"48":{"name":"(anonymous_48)","line":738,"loc":{"start":{"line":738,"column":39},"end":{"line":738,"column":80}}},"49":{"name":"(anonymous_49)","line":754,"loc":{"start":{"line":754,"column":49},"end":{"line":754,"column":90}}},"50":{"name":"(anonymous_50)","line":772,"loc":{"start":{"line":772,"column":47},"end":{"line":772,"column":88}}},"51":{"name":"(anonymous_51)","line":773,"loc":{"start":{"line":773,"column":28},"end":{"line":773,"column":47}}},"52":{"name":"(anonymous_52)","line":794,"loc":{"start":{"line":794,"column":44},"end":{"line":794,"column":85}}},"53":{"name":"(anonymous_53)","line":810,"loc":{"start":{"line":810,"column":47},"end":{"line":810,"column":88}}},"54":{"name":"(anonymous_54)","line":811,"loc":{"start":{"line":811,"column":46},"end":{"line":811,"column":62}}},"55":{"name":"(anonymous_55)","line":828,"loc":{"start":{"line":828,"column":35},"end":{"line":828,"column":76}}},"56":{"name":"(anonymous_56)","line":846,"loc":{"start":{"line":846,"column":49},"end":{"line":846,"column":90}}},"57":{"name":"(anonymous_57)","line":877,"loc":{"start":{"line":877,"column":52},"end":{"line":877,"column":93}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":887,"column":5}},"2":{"start":{"line":13,"column":4},"end":{"line":17,"column":5}},"3":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"4":{"start":{"line":15,"column":12},"end":{"line":15,"column":31}},"5":{"start":{"line":24,"column":4},"end":{"line":24,"column":24}},"6":{"start":{"line":30,"column":4},"end":{"line":36,"column":6}},"7":{"start":{"line":38,"column":4},"end":{"line":41,"column":6}},"8":{"start":{"line":43,"column":4},"end":{"line":50,"column":6}},"9":{"start":{"line":53,"column":4},"end":{"line":54,"column":57}},"10":{"start":{"line":74,"column":4},"end":{"line":80,"column":6}},"11":{"start":{"line":75,"column":8},"end":{"line":79,"column":16}},"12":{"start":{"line":97,"column":4},"end":{"line":103,"column":6}},"13":{"start":{"line":98,"column":8},"end":{"line":102,"column":16}},"14":{"start":{"line":114,"column":4},"end":{"line":120,"column":6}},"15":{"start":{"line":115,"column":8},"end":{"line":119,"column":16}},"16":{"start":{"line":131,"column":4},"end":{"line":137,"column":6}},"17":{"start":{"line":132,"column":8},"end":{"line":136,"column":16}},"18":{"start":{"line":153,"column":4},"end":{"line":159,"column":6}},"19":{"start":{"line":154,"column":8},"end":{"line":158,"column":16}},"20":{"start":{"line":177,"column":4},"end":{"line":183,"column":6}},"21":{"start":{"line":178,"column":8},"end":{"line":182,"column":76}},"22":{"start":{"line":196,"column":4},"end":{"line":198,"column":6}},"23":{"start":{"line":197,"column":8},"end":{"line":197,"column":76}},"24":{"start":{"line":214,"column":4},"end":{"line":230,"column":6}},"25":{"start":{"line":215,"column":8},"end":{"line":215,"column":30}},"26":{"start":{"line":216,"column":8},"end":{"line":222,"column":9}},"27":{"start":{"line":217,"column":12},"end":{"line":217,"column":239}},"28":{"start":{"line":218,"column":12},"end":{"line":221,"column":14}},"29":{"start":{"line":224,"column":8},"end":{"line":224,"column":72}},"30":{"start":{"line":225,"column":8},"end":{"line":229,"column":16}},"31":{"start":{"line":240,"column":4},"end":{"line":246,"column":6}},"32":{"start":{"line":241,"column":8},"end":{"line":245,"column":16}},"33":{"start":{"line":258,"column":4},"end":{"line":273,"column":6}},"34":{"start":{"line":259,"column":8},"end":{"line":259,"column":30}},"35":{"start":{"line":260,"column":8},"end":{"line":266,"column":9}},"36":{"start":{"line":261,"column":12},"end":{"line":261,"column":241}},"37":{"start":{"line":262,"column":12},"end":{"line":265,"column":14}},"38":{"start":{"line":268,"column":8},"end":{"line":272,"column":16}},"39":{"start":{"line":284,"column":4},"end":{"line":299,"column":6}},"40":{"start":{"line":285,"column":8},"end":{"line":285,"column":30}},"41":{"start":{"line":286,"column":8},"end":{"line":292,"column":9}},"42":{"start":{"line":287,"column":12},"end":{"line":287,"column":261}},"43":{"start":{"line":288,"column":12},"end":{"line":291,"column":14}},"44":{"start":{"line":294,"column":8},"end":{"line":298,"column":16}},"45":{"start":{"line":312,"column":4},"end":{"line":330,"column":6}},"46":{"start":{"line":313,"column":8},"end":{"line":313,"column":30}},"47":{"start":{"line":314,"column":8},"end":{"line":320,"column":9}},"48":{"start":{"line":315,"column":12},"end":{"line":315,"column":257}},"49":{"start":{"line":316,"column":12},"end":{"line":319,"column":14}},"50":{"start":{"line":322,"column":8},"end":{"line":322,"column":72}},"51":{"start":{"line":323,"column":8},"end":{"line":329,"column":16}},"52":{"start":{"line":324,"column":16},"end":{"line":324,"column":125}},"53":{"start":{"line":340,"column":4},"end":{"line":346,"column":6}},"54":{"start":{"line":341,"column":8},"end":{"line":345,"column":16}},"55":{"start":{"line":356,"column":4},"end":{"line":362,"column":6}},"56":{"start":{"line":357,"column":8},"end":{"line":361,"column":16}},"57":{"start":{"line":374,"column":4},"end":{"line":382,"column":6}},"58":{"start":{"line":375,"column":8},"end":{"line":381,"column":16}},"59":{"start":{"line":376,"column":16},"end":{"line":376,"column":131}},"60":{"start":{"line":397,"column":4},"end":{"line":403,"column":6}},"61":{"start":{"line":398,"column":8},"end":{"line":402,"column":16}},"62":{"start":{"line":414,"column":4},"end":{"line":420,"column":6}},"63":{"start":{"line":415,"column":8},"end":{"line":419,"column":16}},"64":{"start":{"line":434,"column":4},"end":{"line":440,"column":6}},"65":{"start":{"line":435,"column":8},"end":{"line":439,"column":16}},"66":{"start":{"line":450,"column":4},"end":{"line":456,"column":6}},"67":{"start":{"line":451,"column":8},"end":{"line":455,"column":16}},"68":{"start":{"line":468,"column":4},"end":{"line":470,"column":6}},"69":{"start":{"line":469,"column":8},"end":{"line":469,"column":77}},"70":{"start":{"line":481,"column":4},"end":{"line":488,"column":6}},"71":{"start":{"line":482,"column":8},"end":{"line":487,"column":16}},"72":{"start":{"line":502,"column":4},"end":{"line":508,"column":6}},"73":{"start":{"line":503,"column":8},"end":{"line":507,"column":16}},"74":{"start":{"line":518,"column":4},"end":{"line":524,"column":6}},"75":{"start":{"line":519,"column":8},"end":{"line":523,"column":16}},"76":{"start":{"line":536,"column":4},"end":{"line":544,"column":6}},"77":{"start":{"line":537,"column":8},"end":{"line":543,"column":16}},"78":{"start":{"line":538,"column":16},"end":{"line":538,"column":118}},"79":{"start":{"line":560,"column":4},"end":{"line":566,"column":6}},"80":{"start":{"line":561,"column":8},"end":{"line":565,"column":16}},"81":{"start":{"line":580,"column":4},"end":{"line":592,"column":6}},"82":{"start":{"line":581,"column":8},"end":{"line":591,"column":16}},"83":{"start":{"line":582,"column":16},"end":{"line":582,"column":48}},"84":{"start":{"line":583,"column":16},"end":{"line":585,"column":17}},"85":{"start":{"line":584,"column":20},"end":{"line":584,"column":65}},"86":{"start":{"line":586,"column":16},"end":{"line":586,"column":40}},"87":{"start":{"line":606,"column":4},"end":{"line":612,"column":6}},"88":{"start":{"line":607,"column":8},"end":{"line":611,"column":16}},"89":{"start":{"line":626,"column":4},"end":{"line":632,"column":6}},"90":{"start":{"line":627,"column":8},"end":{"line":631,"column":16}},"91":{"start":{"line":642,"column":4},"end":{"line":648,"column":6}},"92":{"start":{"line":643,"column":8},"end":{"line":647,"column":16}},"93":{"start":{"line":660,"column":4},"end":{"line":668,"column":6}},"94":{"start":{"line":661,"column":8},"end":{"line":667,"column":16}},"95":{"start":{"line":662,"column":16},"end":{"line":662,"column":118}},"96":{"start":{"line":682,"column":4},"end":{"line":688,"column":6}},"97":{"start":{"line":683,"column":8},"end":{"line":687,"column":16}},"98":{"start":{"line":698,"column":4},"end":{"line":704,"column":6}},"99":{"start":{"line":699,"column":8},"end":{"line":703,"column":16}},"100":{"start":{"line":716,"column":4},"end":{"line":724,"column":6}},"101":{"start":{"line":717,"column":8},"end":{"line":723,"column":16}},"102":{"start":{"line":718,"column":16},"end":{"line":718,"column":118}},"103":{"start":{"line":738,"column":4},"end":{"line":744,"column":6}},"104":{"start":{"line":739,"column":8},"end":{"line":743,"column":16}},"105":{"start":{"line":754,"column":4},"end":{"line":760,"column":6}},"106":{"start":{"line":755,"column":8},"end":{"line":759,"column":16}},"107":{"start":{"line":772,"column":4},"end":{"line":780,"column":6}},"108":{"start":{"line":773,"column":8},"end":{"line":779,"column":16}},"109":{"start":{"line":774,"column":16},"end":{"line":774,"column":118}},"110":{"start":{"line":794,"column":4},"end":{"line":800,"column":6}},"111":{"start":{"line":795,"column":8},"end":{"line":799,"column":16}},"112":{"start":{"line":810,"column":4},"end":{"line":814,"column":6}},"113":{"start":{"line":811,"column":8},"end":{"line":813,"column":26}},"114":{"start":{"line":812,"column":12},"end":{"line":812,"column":76}},"115":{"start":{"line":828,"column":4},"end":{"line":834,"column":6}},"116":{"start":{"line":829,"column":8},"end":{"line":833,"column":16}},"117":{"start":{"line":846,"column":4},"end":{"line":852,"column":6}},"118":{"start":{"line":847,"column":8},"end":{"line":851,"column":16}},"119":{"start":{"line":877,"column":4},"end":{"line":884,"column":6}},"120":{"start":{"line":878,"column":8},"end":{"line":883,"column":16}},"121":{"start":{"line":886,"column":4},"end":{"line":886,"column":22}},"122":{"start":{"line":888,"column":0},"end":{"line":888,"column":28}}},"branchMap":{"1":{"line":182,"type":"binary-expr","locations":[{"start":{"line":182,"column":13},"end":{"line":182,"column":17}},{"start":{"line":182,"column":21},"end":{"line":182,"column":73}}]},"2":{"line":197,"type":"binary-expr","locations":[{"start":{"line":197,"column":44},"end":{"line":197,"column":59}},{"start":{"line":197,"column":63},"end":{"line":197,"column":75}}]},"3":{"line":215,"type":"binary-expr","locations":[{"start":{"line":215,"column":17},"end":{"line":215,"column":23}},{"start":{"line":215,"column":27},"end":{"line":215,"column":29}}]},"4":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":8},"end":{"line":216,"column":8}},{"start":{"line":216,"column":8},"end":{"line":216,"column":8}}]},"5":{"line":224,"type":"binary-expr","locations":[{"start":{"line":224,"column":33},"end":{"line":224,"column":55}},{"start":{"line":224,"column":59},"end":{"line":224,"column":71}}]},"6":{"line":259,"type":"binary-expr","locations":[{"start":{"line":259,"column":17},"end":{"line":259,"column":23}},{"start":{"line":259,"column":27},"end":{"line":259,"column":29}}]},"7":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":8},"end":{"line":260,"column":8}},{"start":{"line":260,"column":8},"end":{"line":260,"column":8}}]},"8":{"line":285,"type":"binary-expr","locations":[{"start":{"line":285,"column":17},"end":{"line":285,"column":23}},{"start":{"line":285,"column":27},"end":{"line":285,"column":29}}]},"9":{"line":286,"type":"if","locations":[{"start":{"line":286,"column":8},"end":{"line":286,"column":8}},{"start":{"line":286,"column":8},"end":{"line":286,"column":8}}]},"10":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":17},"end":{"line":313,"column":23}},{"start":{"line":313,"column":27},"end":{"line":313,"column":29}}]},"11":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":8},"end":{"line":314,"column":8}},{"start":{"line":314,"column":8},"end":{"line":314,"column":8}}]},"12":{"line":322,"type":"binary-expr","locations":[{"start":{"line":322,"column":33},"end":{"line":322,"column":55}},{"start":{"line":322,"column":59},"end":{"line":322,"column":71}}]},"13":{"line":324,"type":"cond-expr","locations":[{"start":{"line":324,"column":51},"end":{"line":324,"column":86}},{"start":{"line":324,"column":89},"end":{"line":324,"column":123}}]},"14":{"line":376,"type":"cond-expr","locations":[{"start":{"line":376,"column":57},"end":{"line":376,"column":92}},{"start":{"line":376,"column":95},"end":{"line":376,"column":129}}]},"15":{"line":469,"type":"binary-expr","locations":[{"start":{"line":469,"column":45},"end":{"line":469,"column":60}},{"start":{"line":469,"column":64},"end":{"line":469,"column":76}}]},"16":{"line":538,"type":"cond-expr","locations":[{"start":{"line":538,"column":44},"end":{"line":538,"column":79}},{"start":{"line":538,"column":82},"end":{"line":538,"column":116}}]},"17":{"line":662,"type":"cond-expr","locations":[{"start":{"line":662,"column":44},"end":{"line":662,"column":79}},{"start":{"line":662,"column":82},"end":{"line":662,"column":116}}]},"18":{"line":718,"type":"cond-expr","locations":[{"start":{"line":718,"column":44},"end":{"line":718,"column":79}},{"start":{"line":718,"column":82},"end":{"line":718,"column":116}}]},"19":{"line":774,"type":"cond-expr","locations":[{"start":{"line":774,"column":44},"end":{"line":774,"column":79}},{"start":{"line":774,"column":82},"end":{"line":774,"column":116}}]}},"code":["/**"," *  Diagnostic plugin for iOS"," *"," *  Copyright (c) 2015 Working Edge Ltd."," *  Copyright (c) 2012 AVANTIC ESTUDIO DE INGENIEROS"," **/","var Diagnostic = (function(){","","    /********************","     * Internal functions","     ********************/","","    function ensureBoolean(callback){","        return function(result){","            callback(!!result);","        }","    }","","","","    /********************","     * Public properties","     ********************/","    var Diagnostic = {};","","    /**","     * Permission states","     * @type {object}","     */","    Diagnostic.permissionStatus = {","        \"NOT_REQUESTED\": \"not_determined\", // App has not yet requested this permission","        \"DENIED\": \"denied\", // User denied access to this permission","        \"RESTRICTED\": \"restricted\", // Permission is unavailable and user cannot enable it.  For example, when parental controls are in effect for the current user.","        \"GRANTED\": \"authorized\", //  User granted access to this permission","        \"GRANTED_WHEN_IN_USE\": \"authorized_when_in_use\" //  User granted access use location permission only when app is in use","    };","","    Diagnostic.locationAuthorizationMode = {","        \"ALWAYS\": \"always\",","        \"WHEN_IN_USE\": \"when_in_use\"","    };","","    Diagnostic.bluetoothState = {","        \"UNKNOWN\": \"unknown\",","        \"RESETTING\": \"resetting\",","        \"UNSUPPORTED\": \"unsupported\",","        \"UNAUTHORIZED\": \"unauthorized\",","        \"POWERED_OFF\": \"powered_off\",","        \"POWERED_ON\": \"powered_on\"","    };","","    // Placeholder listeners","    Diagnostic._onBluetoothStateChange =","        Diagnostic._onLocationStateChange = function(){};","","    /**********************","     *","     * Public API functions","     *","     **********************/","","    /***********","     * General","     ***********/","","    /**","     * Switch to settings app. Opens settings page for this app.","     *","     * @param {Function} successCallback - The callback which will be called when switch to settings is successful.","     * @param {Function} errorCallback - The callback which will be called when switch to settings encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     * This works only on iOS 8+. iOS 7 and below will invoke the errorCallback.","     */","    Diagnostic.switchToSettings = function(successCallback, errorCallback) {","        return cordova.exec(successCallback,","            errorCallback,","            'Diagnostic',","            'switchToSettings',","            []);","    };","","    /************","     * Location *","     ************/","","","    /**","     * Checks if location is available for use by the app.","     * On iOS this returns true if both the device setting for Location Services is ON AND the application is authorized to use location.","     * When location is enabled, the locations returned are by a mixture GPS hardware, network triangulation and Wifi network IDs.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if location is available for use.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isLocationAvailable = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isLocationAvailable',","            []);","    };","","    /**","     * Checks if the device location setting is enabled.","     * Returns true if Location Services is enabled.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if Location Services is enabled.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isLocationEnabled = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isLocationEnabled',","            []);","    };","","","    /**","     * Checks if the application is authorized to use location.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if application is authorized to use location either \"when in use\" (only in foreground) OR \"always\" (foreground and background).","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isLocationAuthorized = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isLocationAuthorized',","            []);","    };","","    /**","     * Returns the location authorization status for the application.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single string parameter which indicates the location authorization status as a constant in `cordova.plugins.diagnostic.permissionStatus`.","     * Possible values are:","     * `cordova.plugins.diagnostic.permissionStatus.NOT_REQUESTED`","     * `cordova.plugins.diagnostic.permissionStatus.DENIED`","     * `cordova.plugins.diagnostic.permissionStatus.GRANTED`","     * `cordova.plugins.diagnostic.permissionStatus.GRANTED_WHEN_IN_USE`","     * Note that `GRANTED` indicates the app is always granted permission (even when in background).","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.getLocationAuthorizationStatus = function(successCallback, errorCallback) {","        return cordova.exec(successCallback,","            errorCallback,","            'Diagnostic',","            'getLocationAuthorizationStatus',","            []);","    };","","    /**","     * Requests location authorization for the application.","     * Authorization can be requested to use location either \"when in use\" (only in foreground) or \"always\" (foreground and background).","     * Should only be called if authorization status is NOT_REQUESTED. Calling it when in any other state will have no effect.","     *","     * @param {Function} successCallback - Invoked in response to the user's choice in the permission dialog.","     * It is passed a single string parameter which defines the resulting authorisation status as a constant in `cordova.plugins.diagnostic.permissionStatus`.","     * Possible values are:","     * `cordova.plugins.diagnostic.permissionStatus.DENIED`","     * `cordova.plugins.diagnostic.permissionStatus.GRANTED`","     * `cordova.plugins.diagnostic.permissionStatus.GRANTED_WHEN_IN_USE`","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     * @param {String} mode - (optional) location authorization mode as a constant in `cordova.plugins.diagnostic.locationAuthorizationMode`.","     * If not specified, defaults to `cordova.plugins.diagnostic.locationAuthorizationMode.WHEN_IN_USE`.","     */","    Diagnostic.requestLocationAuthorization = function(successCallback, errorCallback, mode) {","        return cordova.exec(successCallback,","            errorCallback,","            'Diagnostic',","            'requestLocationAuthorization',","            [mode && mode === Diagnostic.locationAuthorizationMode.ALWAYS]);","    };","","    /**","     * Registers a function to be called when a change in Location state occurs.","     * On iOS, this occurs when location authorization status is changed.","     * This can be triggered either by the user's response to a location permission authorization dialog,","     * by the user turning on/off Location Services,","     * or by the user changing the Location authorization state specifically for your app.","     * Pass in a falsey value to de-register the currently registered function.","     *","     * @param {Function} successCallback -  The callback which will be called when the Location state changes.","     * This callback function is passed a single string parameter indicating the new location authorisation status as a constant in `cordova.plugins.diagnostic.permissionStatus`.","     */","    Diagnostic.registerLocationStateChangeHandler = function(successCallback) {","        Diagnostic._onLocationStateChange = successCallback || function(){};","    };","","    /************","     * Camera   *","     ************/","","    /**","     * Checks if camera is enabled for use.","     * On iOS this returns true if both the device has a camera AND the application is authorized to use it.","     *","     * @param {Object} params - (optional) parameters:","     *  - {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if camera is present and authorized for use.","     *  - {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isCameraAvailable = function(params) {","        params = params || {};","        if (typeof arguments[0]  === \"function\") {","            console.warn('The API signature \"cordova.plugins.diagnostic.isCameraAvailable(successCallback, errorCallback)\" is deprecated in favour of \"cordova.plugins.diagnostic.isCameraAvailable(params)\". See documentation for details.');","            params = {","                successCallback: arguments[0],","                errorCallback: arguments[1]","            };","        }","","        params.successCallback = params.successCallback || function(){};","        return cordova.exec(ensureBoolean(params.successCallback),","            params.errorCallback,","            'Diagnostic',","            'isCameraAvailable',","            []);","    };","","    /**","     * Checks if camera hardware is present on device.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if camera is present","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isCameraPresent = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isCameraPresent',","            []);","    };","","","    /**","     * Checks if the application is authorized to use the camera.","     *","     * @param {Object} params - (optional) parameters:","     *  - {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if camera is authorized for use.","     *   - {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isCameraAuthorized = function(params) {","        params = params || {};","        if (typeof arguments[0]  === \"function\") {","            console.warn('The API signature \"cordova.plugins.diagnostic.isCameraAuthorized(successCallback, errorCallback)\" is deprecated in favour of \"cordova.plugins.diagnostic.isCameraAuthorized(params)\". See documentation for details.');","            params = {","                successCallback: arguments[0],","                errorCallback: arguments[1]","            };","        }","","        return cordova.exec(ensureBoolean(params.successCallback),","            params.errorCallback,","            'Diagnostic',","            'isCameraAuthorized',","            []);","    };","","    /**","     * Returns the camera authorization status for the application.","     *","     * @param {Object} params - (optional) parameters:","     *  - {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single string parameter which indicates the authorization status as a constant in `cordova.plugins.diagnostic.permissionStatus`.","     *  - {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.getCameraAuthorizationStatus = function(params) {","        params = params || {};","        if (typeof arguments[0]  === \"function\") {","            console.warn('The API signature \"cordova.plugins.diagnostic.getCameraAuthorizationStatus(successCallback, errorCallback)\" is deprecated in favour of \"cordova.plugins.diagnostic.getCameraAuthorizationStatus(params)\". See documentation for details.');","            params = {","                successCallback: arguments[0],","                errorCallback: arguments[1]","            };","        }","","        return cordova.exec(params.successCallback,","            params.errorCallback,","            'Diagnostic',","            'getCameraAuthorizationStatus',","            []);","    };","","    /**","     * Requests camera authorization for the application.","     * Should only be called if authorization status is NOT_REQUESTED. Calling it when in any other state will have no effect.","     *","     * @param {Object} params - (optional) parameters:","     * - {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single string parameter indicating whether access to the camera was granted or denied:","     * `cordova.plugins.diagnostic.permissionStatus.GRANTED` or `cordova.plugins.diagnostic.permissionStatus.DENIED`","     * - {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.requestCameraAuthorization = function(params){","        params = params || {};","        if (typeof arguments[0]  === \"function\") {","            console.warn('The API signature \"cordova.plugins.diagnostic.requestCameraAuthorization(successCallback, errorCallback)\" is deprecated in favour of \"cordova.plugins.diagnostic.requestCameraAuthorization(params)\". See documentation for details.');","            params = {","                successCallback: arguments[0],","                errorCallback: arguments[1]","            };","        }","","        params.successCallback = params.successCallback || function(){};","        return cordova.exec(function(isGranted){","                params.successCallback(isGranted ? Diagnostic.permissionStatus.GRANTED : Diagnostic.permissionStatus.DENIED);","            },","            params.errorCallback,","            'Diagnostic',","            'requestCameraAuthorization',","            []);","    };","","    /**","     * Checks if the application is authorized to use the Camera Roll in Photos app.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if access to Camera Roll is authorized.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isCameraRollAuthorized = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isCameraRollAuthorized',","            []);","    };","","    /**","     * Returns the authorization status for the application to use the Camera Roll in Photos app.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single string parameter which indicates the authorization status as a constant in `cordova.plugins.diagnostic.permissionStatus`.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.getCameraRollAuthorizationStatus = function(successCallback, errorCallback) {","        return cordova.exec(successCallback,","            errorCallback,","            'Diagnostic',","            'getCameraRollAuthorizationStatus',","            []);","    };","","    /**","     * Requests camera roll authorization for the application.","     * Should only be called if authorization status is NOT_REQUESTED. Calling it when in any other state will have no effect.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single string parameter indicating the new authorization status:","     * `cordova.plugins.diagnostic.permissionStatus.GRANTED` or `cordova.plugins.diagnostic.permissionStatus.DENIED`","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.requestCameraRollAuthorization = function(successCallback, errorCallback) {","        return cordova.exec(function(status){","                successCallback(status == \"authorized\" ? Diagnostic.permissionStatus.GRANTED : Diagnostic.permissionStatus.DENIED);","            },","            errorCallback,","            'Diagnostic',","            'requestCameraRollAuthorization',","            []);","    };","","    /************","     * WiFi     *","     ************/","","    /**","     * Checks if Wi-Fi is connected.","     * On iOS this returns true if the WiFi setting is set to enabled AND the device is connected to a network by WiFi.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if device is connected by WiFi.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isWifiAvailable = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isWifiAvailable',","            []);","    };","","    /**","     * Checks if Wifi is enabled.","     * On iOS this returns true if the WiFi setting is set to enabled (regardless of whether it's connected to a network).","     *","     * @param {Function} successCallback -  The callback which will be called when the operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if WiFi is enabled.","     * @param {Function} errorCallback -  The callback which will be called when the operation encounters an error.","     *  This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isWifiEnabled = function(successCallback, errorCallback) {","        return cordova.exec(successCallback,","            errorCallback,","            'Diagnostic',","            'isWifiEnabled',","            []);","    };","","    /***************","     * Bluetooth   *","     ***************/","","    /**","     * Checks if the device has Bluetooth LE capabilities and if so that Bluetooth is switched on","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if device has Bluetooth LE and Bluetooth is switched on.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isBluetoothAvailable = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isBluetoothAvailable',","            []);","    };","","    /**","     * Returns the state of Bluetooth LE on the device.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single string parameter which indicates the Bluetooth state as a constant in `cordova.plugins.diagnostic.bluetoothState`.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.getBluetoothState = function(successCallback, errorCallback) {","        return cordova.exec(successCallback,","            errorCallback,","            'Diagnostic',","            'getBluetoothState',","            []);","    };","","","    /**","     * Registers a function to be called when a change in Bluetooth state occurs.","     * Pass in a falsey value to de-register the currently registered function.","     *","     * @param {Function} successCallback - function call when a change in Bluetooth state occurs.","     * This callback function is passed a single string parameter which indicates the Bluetooth state as a constant in `cordova.plugins.diagnostic.bluetoothState`.","     * @param {Function} errorCallback -  The callback which will be called when the operation encounters an error.","     *  This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.registerBluetoothStateChangeHandler = function(successCallback, errorCallback){","        Diagnostic._onBluetoothStateChange = successCallback || function(){};","    };","","    /**","     * Requests Bluetooth authorization for the application.","     * The outcome of the authorization request can be determined by registering a handler using `registerBluetoothStateChangeHandler()`.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is not passed any parameters.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.requestBluetoothAuthorization = function(successCallback, errorCallback) {","        return cordova.exec(","            successCallback,","            errorCallback,","            'Diagnostic',","            'requestBluetoothAuthorization',","            []);","    };","","    /***************************","     * Microphone / Record Audio","     ***************************/","","    /**","     * Checks if the application is authorized to use the microphone for recording audio.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if access to microphone is authorized.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isMicrophoneAuthorized = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isMicrophoneAuthorized',","            []);","    };","","    /**","     * Returns the authorization status for the application to use the microphone for recording audio.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single string parameter which indicates the authorization status as a constant in `cordova.plugins.diagnostic.permissionStatus`.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.getMicrophoneAuthorizationStatus = function(successCallback, errorCallback) {","        return cordova.exec(successCallback,","            errorCallback,","            'Diagnostic',","            'getMicrophoneAuthorizationStatus',","            []);","    };","","    /**","     * Requests access to microphone if authorization was never granted nor denied, will only return access status otherwise.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single string parameter indicating whether access to the microphone was granted or denied:","     * `cordova.plugins.diagnostic.permissionStatus.GRANTED` or `cordova.plugins.diagnostic.permissionStatus.DENIED`","     * @param {Function} errorCallback - The callback which will be called when an error occurs.","     * This callback function is passed a single string parameter containing the error message.","     * This works only on iOS 7+.","     */","    Diagnostic.requestMicrophoneAuthorization = function(successCallback, errorCallback) {","        return cordova.exec(function(isGranted){","                successCallback(isGranted ? Diagnostic.permissionStatus.GRANTED : Diagnostic.permissionStatus.DENIED);","            },","            errorCallback,","            'Diagnostic',","            'requestMicrophoneAuthorization',","            []);","    };","","    /***********************","     * Remote Notifications","     ***********************/","","    /**","     * Checks if remote (push) notifications are enabled.","     * On iOS 8+, returns true if app is registered for remote notifications AND \"Allow Notifications\" switch is ON AND alert style is not set to \"None\" (i.e. \"Banners\" or \"Alerts\").","     * On iOS <=7, returns true if app is registered for remote notifications AND alert style is not set to \"None\" (i.e. \"Banners\" or \"Alerts\") - same as isRegisteredForRemoteNotifications().","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if remote (push) notifications are enabled.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isRemoteNotificationsEnabled = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isRemoteNotificationsEnabled',","            []);","    };","","    /**","     * Indicates the current setting of notification types for the app in the Settings app.","     * Note: on iOS 8+, if \"Allow Notifications\" switch is OFF, all types will be returned as disabled.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single object parameter where the key is the notification type and the value is a boolean indicating whether it's enabled:","     * \"alert\" => alert style is not set to \"None\" (i.e. \"Banners\" or \"Alerts\");","     * \"badge\" => \"Badge App Icon\" switch is ON;","     * \"sound\" => \"Sounds\"/\"Alert Sound\" switch is ON.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.getRemoteNotificationTypes = function(successCallback, errorCallback) {","        return cordova.exec(function(sTypes){","                var oTypes = JSON.parse(sTypes);","                for(var type in oTypes){","                    oTypes[type] = parseInt(oTypes[type]) === 1 ;","                }","                successCallback(oTypes);","            },","            errorCallback,","            'Diagnostic',","            'getRemoteNotificationTypes',","            []);","    };","","    /**","     * Indicates if the app is registered for remote notifications on the device.","     * On iOS 8+, returns true if the app is registered for remote notifications and received its device token,","     * or false if registration has not occurred, has failed, or has been denied by the user.","     * Note that user preferences for notifications in the Settings app will not affect this.","     * On iOS <=7, returns true if app is registered for remote notifications AND alert style is not set to \"None\" (i.e. \"Banners\" or \"Alerts\") - same as isRemoteNotificationsEnabled().","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if the device is registered for remote (push) notifications.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isRegisteredForRemoteNotifications = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isRegisteredForRemoteNotifications',","            []);","    };","","    /*************","     * Contacts","     *************/","","    /**","     * Checks if the application is authorized to use contacts (address book).","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if contacts is authorized for use.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isContactsAuthorized = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isAddressBookAuthorized',","            []);","    };","","    /**","     * Returns the contacts (address book) authorization status for the application.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single string parameter which indicates the authorization status as a constant in `cordova.plugins.diagnostic.permissionStatus`.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.getContactsAuthorizationStatus = function(successCallback, errorCallback) {","        return cordova.exec(successCallback,","            errorCallback,","            'Diagnostic',","            'getAddressBookAuthorizationStatus',","            []);","    };","","    /**","     * Requests contacts (address book) authorization for the application.","     * Should only be called if authorization status is NOT_REQUESTED. Calling it when in any other state will have no effect.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single string parameter indicating whether access to contacts was granted or denied:","     * `cordova.plugins.diagnostic.permissionStatus.GRANTED` or `cordova.plugins.diagnostic.permissionStatus.DENIED`","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.requestContactsAuthorization = function(successCallback, errorCallback) {","        return cordova.exec(function(isGranted){","                successCallback(isGranted ? Diagnostic.permissionStatus.GRANTED : Diagnostic.permissionStatus.DENIED);","            },","            errorCallback,","            'Diagnostic',","            'requestAddressBookAuthorization',","            []);","    };","","    /*****************","     * Calendar events","     *****************/","","    /**","     * Checks if the application is authorized to use calendar.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if calendar is authorized for use.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isCalendarAuthorized = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isCalendarAuthorized',","            []);","    };","","    /**","     * Returns the calendar event authorization status for the application.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single string parameter which indicates the authorization status as a constant in `cordova.plugins.diagnostic.permissionStatus`.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.getCalendarAuthorizationStatus = function(successCallback, errorCallback) {","        return cordova.exec(successCallback,","            errorCallback,","            'Diagnostic',","            'getCalendarAuthorizationStatus',","            []);","    };","","    /**","     * Requests calendar event authorization for the application.","     * Should only be called if authorization status is NOT_REQUESTED. Calling it when in any other state will have no effect.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single string parameter indicating whether access to calendar was granted or denied:","     * `cordova.plugins.diagnostic.permissionStatus.GRANTED` or `cordova.plugins.diagnostic.permissionStatus.DENIED`","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.requestCalendarAuthorization = function(successCallback, errorCallback) {","        return cordova.exec(function(isGranted){","                successCallback(isGranted ? Diagnostic.permissionStatus.GRANTED : Diagnostic.permissionStatus.DENIED);","            },","            errorCallback,","            'Diagnostic',","            'requestCalendarAuthorization',","            []);","    };","","    /*********************","     * Calendar reminders","     *********************/","","    /**","     * Checks if the application is authorized to use calendar reminders.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if reminders is authorized for use.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isRemindersAuthorized = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isRemindersAuthorized',","            []);","    };","","    /**","     * Returns the calendar event authorization status for the application.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single string parameter which indicates the authorization status as a constant in `cordova.plugins.diagnostic.permissionStatus`.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.getRemindersAuthorizationStatus = function(successCallback, errorCallback) {","        return cordova.exec(successCallback,","            errorCallback,","            'Diagnostic',","            'getRemindersAuthorizationStatus',","            []);","    };","","    /**","     * Requests calendar reminders authorization for the application.","     * Should only be called if authorization status is NOT_REQUESTED. Calling it when in any other state will have no effect.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single string parameter indicating whether access to reminders was granted or denied:","     * `cordova.plugins.diagnostic.permissionStatus.GRANTED` or `cordova.plugins.diagnostic.permissionStatus.DENIED`","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.requestRemindersAuthorization = function(successCallback, errorCallback) {","        return cordova.exec(function(isGranted){","                successCallback(isGranted ? Diagnostic.permissionStatus.GRANTED : Diagnostic.permissionStatus.DENIED);","            },","            errorCallback,","            'Diagnostic',","            'requestRemindersAuthorization',","            []);","    };","","    /*********************","     * Background refresh","     *********************/","","    /**","     * Returns the background refresh authorization status for the application.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single string parameter which indicates the authorization status as a constant in `cordova.plugins.diagnostic.permissionStatus`.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.getBackgroundRefreshStatus = function(successCallback, errorCallback) {","        return cordova.exec(successCallback,","            errorCallback,","            'Diagnostic',","            'getBackgroundRefreshStatus',","            []);","    };","","    /**","     * Checks if the application is authorized for background refresh.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if background refresh is authorized for use.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isBackgroundRefreshAuthorized = function(successCallback, errorCallback) {","        Diagnostic.getBackgroundRefreshStatus(function(status){","            successCallback(status === Diagnostic.permissionStatus.GRANTED);","        }, errorCallback);","    };","","    /*************","     * Motion","     *************/","","    /**","     * Checks if motion tracking is available on the current device.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if motion tracking is available on the current device.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isMotionAvailable = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isMotionAvailable',","            []);","    };","","    /**","     * Checks if it's possible to determine the outcome of a motion authorization request on the current device.","     * There's no direct way to determine if authorization was granted or denied, so the Pedometer API must be used to indirectly determine this:","     * therefore, if the device supports motion tracking but not Pedometer Event Tracking, the outcome of requesting motion detection cannot be determined.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single boolean parameter which is TRUE if it's possible to determine the outcome of a motion authorization request on the current device.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.isMotionRequestOutcomeAvailable = function(successCallback, errorCallback) {","        return cordova.exec(ensureBoolean(successCallback),","            errorCallback,","            'Diagnostic',","            'isMotionRequestOutcomeAvailable',","            []);","    };","","    /**","     * Requests and checks motion authorization for the application:","     * there is no way to independently request only or check only, so both must be done in one operation.","     * The native dialog asking user's consent can only be invoked once after the app is installed by calling this function:","     * once the user has either allowed or denied access, this function will only return the current authorization status","     * - it is not possible to re-invoke the dialog if the user denied permission in the native dialog;","     * in this case, you will have to instruct the user how to change motion authorization manually via the Settings app.","     * When calling this function, the message contained in the `NSMotionUsageDescription` .plist key is displayed to the user;","     * this plugin provides a default message, but you should override this with your specific reason for requesting access.","     * If the device doesn't support motion detection, the error callback will be invoked.","     * There's no direct way to determine if authorization was granted or denied, so the Pedometer API must be used to indirectly determine this:","     * therefore, if the device supports motion tracking but not Pedometer Event Tracking, the outcome of requesting motion detection cannot be determined.","     *","     * @param {Function} successCallback - The callback which will be called when operation is successful.","     * This callback function is passed a single string parameter indicating the result:","     * - `cordova.plugins.diagnostic.permissionStatus.GRANTED` - user granted motion authorization","     * - `cordova.plugins.diagnostic.permissionStatus.DENIED` - user denied authorization","     * - `cordova.plugins.diagnostic.permissionStatus.RESTRICTED` - user cannot grant motion authorization","     * - `cordova.plugins.diagnostic.permissionStatus.NOT_DETERMINED` - device does not support Pedometer Event Tracking, so authorization outcome cannot be determined.","     * - {Function} errorCallback - The callback which will be called when an error occurs. This callback function is passed a single string parameter containing the error message.","     * @param {Function} errorCallback -  The callback which will be called when operation encounters an error.","     * This callback function is passed a single string parameter containing the error message.","     */","    Diagnostic.requestAndCheckMotionAuthorization = function(successCallback, errorCallback) {","        return cordova.exec(","            successCallback,","            errorCallback,","            'Diagnostic',","            'requestAndCheckMotionAuthorization',","            []);","    };","","    return Diagnostic;","})();","module.exports = Diagnostic;",""],"l":{"7":1,"13":1,"14":0,"15":0,"24":1,"30":1,"38":1,"43":1,"53":1,"74":1,"75":0,"97":1,"98":0,"114":1,"115":0,"131":1,"132":0,"153":1,"154":0,"177":1,"178":0,"196":1,"197":0,"214":1,"215":0,"216":0,"217":0,"218":0,"224":0,"225":0,"240":1,"241":0,"258":1,"259":0,"260":0,"261":0,"262":0,"268":0,"284":1,"285":0,"286":0,"287":0,"288":0,"294":0,"312":1,"313":0,"314":0,"315":0,"316":0,"322":0,"323":0,"324":0,"340":1,"341":0,"356":1,"357":0,"374":1,"375":0,"376":0,"397":1,"398":0,"414":1,"415":0,"434":1,"435":0,"450":1,"451":0,"468":1,"469":0,"481":1,"482":0,"502":1,"503":0,"518":1,"519":0,"536":1,"537":0,"538":0,"560":1,"561":0,"580":1,"581":0,"582":0,"583":0,"584":0,"586":0,"606":1,"607":0,"626":1,"627":0,"642":1,"643":0,"660":1,"661":0,"662":0,"682":1,"683":0,"698":1,"699":0,"716":1,"717":0,"718":0,"738":1,"739":0,"754":1,"755":0,"772":1,"773":0,"774":0,"794":1,"795":0,"810":1,"811":0,"812":0,"828":1,"829":0,"846":1,"847":0,"877":1,"878":0,"886":1,"888":1}}}